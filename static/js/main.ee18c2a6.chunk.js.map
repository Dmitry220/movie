{"version":3,"sources":["Components/Header/header.module.css","Components/Loader/preloader.module.css","Components/Filter/Filter.module.css","reportWebVitals.js","Redux/typeAction.js","Redux/filmsReduser.js","Redux/headerReducer.js","Redux/favouritesReduser.js","Redux/filterReduser.js","Redux/themeReduser.js","Redux/storeRedux.js","API/API.js","Redux/actions.js","Redux/selectors.js","Components/Filter/Filter.js","Components/Loader/Preloader.js","assets/img/defaultMovieImage.jpg","Components/Films/CardFilm.js","Components/Films/Films.js","Components/ShowFilms/SortFilms.js","Components/ShowFilms/SearchFilms.js","Components/ShowFilms/FilmsAwaitFilms.js","Components/ShowFilms/FilmsTop100.js","Components/DescriptionFilm/DescriptionFilm.js","Components/ShowFilms/FavoutiteFilms.js","logo.svg","Components/utils/StyleMob.js","Components/Header/Header.js","Components/Filter/FilterMob.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHOW_FILMS","SHOW_LOADING","HIDE_LOADING","HANDLER_INPUT","GET_GENRES","SET_FAVOURITE_FILMS","DELETE_FAVOURITE_FILMS","SET_SELECTED_FILM_ID","CHANGE_THEME","DISPLAY_SHOW","SIMILARS_MOVIE","API_KEY","initialState","pagesCount","films","isLoading","currentPage","selectedMovie","isResponse","similarsMovies","searchTest","favouriteFilms","genres","countries","displaySpoiler","darkTheme","persistConfig","key","storage","whitelist","persistConfigTheme","reducers","combineReducers","state","action","type","payload","header","text","filter","status","persistReducer","film","filmId","theme","store","createStore","compose","applyMiddleware","thunk","persistor","persistStore","instance","axios","baseURL","headers","instanceNew","filmsAPI","get","inputText","ratingFrom","ratingTo","yearFrom","yearTo","page","genre","country","order","id","showLoading","hideLoading","setFilms","getTop100Films","dispatch","response","data","catch","console","log","getAwaitFilms","getFilmsFromSearch","query","setSpoilerShow","getGenreAndCountries","getMovieByFilter","setSelectedFilmById","setSelectedFilmByIdAC","changeTheme","getSimilarsMovies","items","darkThemeSelector","favouriteMovieSelector","fetchingSelector","selectedMovieSelector","listGenresSelector","listCountriesSelector","spoilerFilterMobSelector","movieSelector","movieCurrentPageSelector","moviePagesCountSelector","movieSimilarsSelector","partitionFavoriteMovie","createSelector","array","subarray","length","i","push","Math","ceil","slice","Filter","history","useHistory","useDispatch","useSelector","useState","setGenre","setCountry","setRatingTo","setRatingFrom","setYearTo","setYearFrom","setOrder","currentYear","Date","getFullYear","useEffect","className","filterStyle","filter__body","filter__title","dark","genre__item","select","onChange","value","target","name","map","country__item","order__item","filter__year","year","year__title","subtitle","year__item","range","min","max","start","step","tooltips","connect","render","handle","un","percent","filter__rating","rating","ratting__title","rating__item","filter__submit","onClick","undefined","Preloader","style","spinner","spinner__head","CardFilm","nameRu","posterUrlPreview","to","src","img","alt","FavoriteButtons","some","item","Films","f","SortFilms","useParams","onPageChanged","pageNumber","selected","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","SearchFilms","props","FilmsAwaitFilms","FilmsTop100","DescriptionFilm","selectedFilm","similarsFilm","a","SwiperCore","use","FreeMode","Pagination","posterUrl","slogan","filmLength","g","index","c","ratingAgeLimits","description","slidesPerView","spaceBetween","breakpoints","FavouriteFilms","setCurrentPage","totalPage","Array","isArray","prev","StyleMobile","initial","styleName","val1","val2","resultStyle","active","Header","themeToggler","burgerActive","setBurgerActive","searchValue","setSearchValue","timer","setTimer","clearTimeout","setTimeout","document","querySelector","classList","toggle","header__container","header__body","header__column","header__column_1","header__logo","logo","header__burger","header__menu","header__list","header__link","themeCheck","htmlFor","switch","checked","slider","round","e","search","placeholder","inputSearch","inputSearchDark","searchDark","FilterMob","spoiler","spoiler__item","spoiler__title","spoiler__body","MemoShowOnSearchFilms","memo","MemoFilmsTop100","MemoFilmsAwaitFilms","MemoFavouriteFilms","MemoDescriptionFilm","MemoSortFilmsOnGenre","SortFilmsOnGenre","App","window","matchMedia","matches","matchesMedia","setMatchesMedia","addEventListener","x","window768","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ee18c2a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__J3qgt\",\"out\":\"header_out__10H5V\",\"dark\":\"header_dark__2aHwA\",\"header__container\":\"header_header__container__3RYDU\",\"header__body\":\"header_header__body__2ufpH\",\"header__column\":\"header_header__column__1_WTS\",\"header__column_1\":\"header_header__column_1__1PuED\",\"header__menu\":\"header_header__menu__16WJ2\",\"header__list\":\"header_header__list__39Xxp\",\"header__logo\":\"header_header__logo__2zjR8\",\"header__burger\":\"header_header__burger__37uwz\",\"header__link\":\"header_header__link__2OkAC\",\"header__btn\":\"header_header__btn__3IshA\",\"active\":\"header_active__kVMDG\",\"switch\":\"header_switch__2RuJl\",\"slider\":\"header_slider__3KY-x\",\"round\":\"header_round__3Rs_u\",\"themeCheck\":\"header_themeCheck__2FHAH\",\"search\":\"header_search__8oj5c\",\"searchDark\":\"header_searchDark__2s4qs\",\"inputSearch\":\"header_inputSearch__3kC07\",\"inputSearchDark\":\"header_inputSearchDark__2l_MH\",\"clue\":\"header_clue__2fv4u\",\"clue__list\":\"header_clue__list__1bRuA\",\"clue__item\":\"header_clue__item__1RRGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"preloader_spinner__35WkY\",\"spinner__head\":\"preloader_spinner__head__uvGMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__XHns-\",\"filter__title\":\"Filter_filter__title__5gf7b\",\"dark\":\"Filter_dark__3vMcP\",\"subtitle\":\"Filter_subtitle__3o8a1\",\"filter__body\":\"Filter_filter__body__2CwuB\",\"rating__item\":\"Filter_rating__item__tkoa4\",\"year__item\":\"Filter_year__item__1bE3k\",\"select\":\"Filter_select__6jKWr\",\"select__option\":\"Filter_select__option__s_iwn\",\"value__container\":\"Filter_value__container__3GZPa\",\"value__column\":\"Filter_value__column__2vBAW\",\"filter__submit\":\"Filter_filter__submit__3R8Ri\",\"spoiler__item\":\"Filter_spoiler__item__f5RoG\",\"spoiler__title\":\"Filter_spoiler__title__Gpq20\",\"spoiler__body\":\"Filter_spoiler__body__1OgCJ\",\"active\":\"Filter_active__2HQZd\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SHOW_FILMS = \"SHOW_FILMS\";\r\nexport const SHOW_LOADING = 'SHOW_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';\r\nexport const HANDLER_INPUT = 'HANDLER_INPUT'\r\nexport const GET_GENRES = 'GET_GENRES'\r\nexport const SET_FAVOURITE_FILMS = 'SET_FAVOURITE_FILMS'\r\nexport const DELETE_FAVOURITE_FILMS = 'DELETE_FAVOURITE_FILMS'\r\nexport const SET_SELECTED_FILM_ID = 'SET_SELECTED_FILM_ID'\r\nexport const CHANGE_THEME = 'CHANGE_THEME'\r\nexport const DISPLAY_SHOW = 'DISPLAY_SHOW'\r\nexport const SIMILARS_MOVIE = \"SIMILARS_MOVIE\"\r\nexport const API_KEY = \"303097b4-2b0a-46a5-8aae-4a1137273ff1\";\r\n\r\n","import {\r\n   SHOW_LOADING,\r\n   HIDE_LOADING,\r\n   SHOW_FILMS,\r\n   SET_SELECTED_FILM_ID,\r\n   DELETE_SELECTED_FILM_ID, SIMILARS_MOVIE\r\n} from \"./typeAction\";\r\n\r\nlet initialState = {\r\n   pagesCount: null,\r\n   films: [],\r\n   isLoading: false,\r\n   currentPage: 1,\r\n   selectedMovie: null,\r\n   isResponse: false,\r\n   similarsMovies: []\r\n}\r\n\r\nexport const filmsReduser = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case SHOW_FILMS:\r\n         return {\r\n            ...state,\r\n            films: action.payload.films,\r\n            pagesCount: action.payload.pagesCount,\r\n            currentPage: action.payload.currentPage,\r\n         }\r\n      case SHOW_LOADING:\r\n         return {\r\n            ...state,\r\n            isLoading: true\r\n         }\r\n      case HIDE_LOADING:\r\n         return {\r\n            ...state,\r\n            isLoading: false\r\n         }\r\n      case SET_SELECTED_FILM_ID:\r\n         return {\r\n            ...state,\r\n            selectedMovie: action.payload\r\n         }\r\n      case SIMILARS_MOVIE:\r\n         return {\r\n            ...state,\r\n            similarsMovies: action.payload\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","import { HANDLER_INPUT } from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    searchTest: \"\",\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HANDLER_INPUT:\r\n            return {\r\n                ...state,\r\n                searchTest: action.text,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {DELETE_FAVOURITE_FILMS, SET_FAVOURITE_FILMS} from \"./typeAction\";\r\n\r\n\r\nlet initialState = {\r\n    favouriteFilms: [],\r\n}\r\n\r\nexport const favouriteReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms, action.payload],\r\n            }\r\n        case DELETE_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms.filter(film=>film.filmId !== action.payload.filmId)],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {DISPLAY_SHOW, GET_GENRES} from \"./typeAction\";\r\n\r\n\r\nconst initialState = {\r\n    genres: [],\r\n    countries: [],\r\n    displaySpoiler: false\r\n}\r\n\r\nexport const filterReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.genres,\r\n                countries: action.countries\r\n            }\r\n        case DISPLAY_SHOW:\r\n            return {\r\n                ...state,\r\n                displaySpoiler: !action.status\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {CHANGE_THEME} from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    darkTheme: false,\r\n};\r\n\r\nexport const themeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_THEME:\r\n            return {\r\n\r\n                ...state,\r\n                darkTheme: !state.darkTheme,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { filmsReduser } from \"./filmsReduser\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {favouriteReduser} from \"./favouritesReduser\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {filterReduser} from \"./filterReduser\";\r\nimport {themeReducer} from \"./themeReduser\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['favouriteFilms']\r\n};\r\nconst persistConfigTheme = {\r\n    key: 'theme',\r\n    storage,\r\n    whitelist: ['darkTheme']\r\n};\r\n\r\nlet reducers = combineReducers({\r\n    films : filmsReduser,\r\n    header: headerReducer,\r\n    filter: filterReduser,\r\n    favouriteFilms: persistReducer(persistConfig, favouriteReduser),\r\n    theme: persistReducer(persistConfigTheme, themeReducer)\r\n})\r\n\r\nconst store = createStore(reducers,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk\r\n        ),\r\n      //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import * as axios from \"axios\";\r\nimport { API_KEY } from \"../Redux/typeAction\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://kinopoiskapiunofficial.tech/api/v2.1/films\",\r\n    headers: {\r\n        \"Content-Type\": \"aplication/json\",\r\n        \"X-API-KEY\": API_KEY,\r\n    },\r\n});\r\nconst instanceNew = axios.create({\r\n    baseURL: \"https://kinopoiskapiunofficial.tech/api/v2.2/films\",\r\n    headers: {\r\n        \"Content-Type\": \"aplication/json\",\r\n        \"X-API-KEY\": API_KEY,\r\n    },\r\n});\r\n\r\nexport const filmsAPI = {\r\n\r\n    getFilmsTOP100(currentPage=1) {\r\n        return instance.get(`/top?type=TOP_100_POPULAR_FILMS&page=${currentPage}`);\r\n    },\r\n    getAwaitFilms(currentPage) {\r\n        return instance.get(`/top?type=TOP_AWAIT_FILMS&page=${currentPage}`);\r\n\r\n    },\r\n    getFilmsFromSearch(inputText, currentPage) {\r\n        return instance.get(\r\n            `/search-by-keyword?keyword=${inputText}&page=${currentPage}`\r\n        );\r\n    },\r\n    getListGenreAndCountry (){\r\n        return instance.get(`/filters`);\r\n    },\r\n\r\n    filterSearch (ratingFrom , ratingTo , yearFrom , yearTo , page , genre , country, order){\r\n        return instance.get(`/search-by-filters?genre=${genre}&country=${country}&order=${order}&type=ALL&ratingFrom=${ratingFrom}&ratingTo=${ratingTo}&yearFrom=${yearFrom}&yearTo=${yearTo}&page=${page}`)\r\n    },\r\n    getFilmsById(id){\r\n        return instance.get(`/${id}`)\r\n    },\r\n    getSimilarsMoviesById(id){\r\n        return instanceNew.get(`/${id}/similars`)\r\n    }\r\n};\r\n","import {filmsAPI} from \"../API/API\";\r\nimport {\r\n    SHOW_FILMS,\r\n    GET_GENRES,\r\n    HIDE_LOADING,\r\n    SHOW_LOADING,\r\n    SET_FAVOURITE_FILMS,\r\n    DELETE_FAVOURITE_FILMS,\r\n    SET_SELECTED_FILM_ID,\r\n    DELETE_SELECTED_FILM_ID, CHANGE_THEME, DISPLAY_SHOW, SIMILARS_MOVIE,\r\n} from \"./typeAction\";\r\n\r\n\r\nexport const showLoading = () => ({type: SHOW_LOADING});\r\nexport const hideLoading = () => ({type: HIDE_LOADING});\r\n\r\nexport const setGenresAndCountries = (genres, countries) => ({\r\n    type: GET_GENRES,\r\n    genres: genres,\r\n    countries: countries\r\n});\r\n\r\nexport const setFilms = (films, pagesCount, currentPage) => ({\r\n    type: SHOW_FILMS,\r\n    payload: {\r\n        films,\r\n        pagesCount,\r\n        currentPage\r\n    }\r\n})\r\n\r\nexport const getTop100Films = (currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n\r\n    filmsAPI\r\n        .getFilmsTOP100(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getAwaitFilms = (currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getAwaitFilms(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getFilmsFromSearch = (query, currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getFilmsFromSearch(query, currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n            dispatch(setSpoilerShow(true))\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\n\r\nexport const getGenreAndCountries  = () => (dispatch) => {\r\n    filmsAPI.getListGenreAndCountry().then((response) => {\r\n        dispatch(setGenresAndCountries(response.data.genres, response.data.countries));\r\n    });\r\n};\r\n\r\nexport const getMovieByFilter = (ratingFrom, ratingTo, yearFrom, yearTo, page ,genre, country, order) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .filterSearch(ratingFrom, ratingTo, yearFrom, yearTo, page, genre, country,order)\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                dispatch(setFilms(response.data.films, response.data.pagesCount, page))\r\n                dispatch(setSpoilerShow(true))\r\n                dispatch(hideLoading())\r\n            }\r\n        })\r\n        .catch(() => {\r\n            dispatch(setFilms([], null, null))\r\n            dispatch(hideLoading())\r\n    });\r\n};\r\n\r\nexport const setFavouritesFilms = (payload) => ({type: SET_FAVOURITE_FILMS, payload})\r\n\r\n\r\nexport const deleteFavouritesFilms = (payload) => ({type: DELETE_FAVOURITE_FILMS, payload})\r\n\r\nexport const setSelectedFilmById = (id) => (dispatch)=> {\r\n    dispatch(showLoading())\r\n    filmsAPI.getFilmsById(id).then((response) => {\r\n        dispatch(setSelectedFilmByIdAC(response.data.data));\r\n        dispatch(setSpoilerShow(true))\r\n        dispatch(hideLoading())\r\n    });\r\n}\r\n\r\nexport const setSelectedFilmByIdAC = (payload) => ({type: SET_SELECTED_FILM_ID, payload})\r\n\r\nexport const changeTheme = () => ({type: CHANGE_THEME})\r\n\r\nexport const setSpoilerShow = (status) => ({type:DISPLAY_SHOW, status})\r\n\r\nexport const setSimilarsMovies = (payload) => ({type: SIMILARS_MOVIE, payload})\r\n\r\nexport const getSimilarsMovies = (id) => (dispatch)=> {\r\n    dispatch(showLoading())\r\n\r\n    filmsAPI.getSimilarsMoviesById(id).then((response) => {\r\n\r\n        dispatch(setSimilarsMovies(response.data.items));\r\n        dispatch(hideLoading())\r\n    });\r\n}\r\n","import { createSelector } from 'reselect'\r\n\r\nexport const darkThemeSelector = (state) => {\r\n    return state.theme.darkTheme\r\n}\r\nexport const favouriteMovieSelector = (state) => {\r\n    return state.favouriteFilms.favouriteFilms\r\n}\r\nexport const fetchingSelector = (state) => {\r\n    return state.films.isLoading\r\n}\r\nexport const selectedMovieSelector = (state) => {\r\n    return state.films.selectedMovie\r\n}\r\nexport const listGenresSelector = (state) => {\r\n    return state.filter.genres\r\n}\r\nexport const listCountriesSelector = (state) => {\r\n    return state.filter.countries\r\n}\r\nexport const spoilerFilterMobSelector = (state) => {\r\n    return state.filter.displaySpoiler\r\n}\r\nexport const movieSelector = (state) => {\r\n    return state.films.films\r\n}\r\nexport const movieCurrentPageSelector = (state) => {\r\n    return state.films.currentPage\r\n}\r\nexport const moviePagesCountSelector = (state) => {\r\n    return state.films.pagesCount\r\n}\r\nexport const movieSimilarsSelector = (state) => {\r\n    return state.films.similarsMovies\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const partitionFavoriteMovie = createSelector( favouriteMovieSelector , (favouriteFilms) => {\r\n    let array = favouriteFilms\r\n    let size = 20;\r\n    let subarray = [];\r\n\r\n    if(array.length <= size) {\r\n        for (let i = 0; i < array.length; i++){\r\n            subarray.push(array[i])\r\n        }\r\n        return subarray\r\n    }else{\r\n        for (let i = 0; i < Math.ceil(array.length/size); i++){\r\n            subarray[i] = array.slice((i*size), (i*size) + size);\r\n        }\r\n\r\n        return subarray\r\n    }\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getGenreAndCountries} from \"../../Redux/actions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport filterStyle from './Filter.module.css'\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport {darkThemeSelector, listCountriesSelector, listGenresSelector} from \"../../Redux/selectors\";\r\n\r\nconst Filter = () => {\r\n   let history = useHistory()\r\n   const dispatch = useDispatch()\r\n   const genres = useSelector(listGenresSelector);\r\n   const countries = useSelector(listCountriesSelector);\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   const [genre, setGenre] = useState()\r\n   const [country, setCountry] = useState()\r\n   const [ratingTo, setRatingTo] = useState()\r\n   const [ratingFrom, setRatingFrom] = useState()\r\n   const [yearTo, setYearTo] = useState()\r\n   const [yearFrom, setYearFrom] = useState()\r\n   const [order, setOrder] = useState()\r\n\r\n   let currentTime = new Date()\r\n   let currentYear = currentTime.getFullYear();\r\n\r\n   const SubmitFilter = () => {\r\n      history.push(`/films/${ratingFrom === undefined ? 0 : ratingFrom}/${ratingTo === undefined ? 10 : ratingTo}/${yearFrom === undefined ? 1950 : yearFrom}/${yearTo === undefined ? currentYear : yearTo}/${genre === undefined ? 0 : genre}/${country === undefined ? 0 : country}/${order === undefined ? \"RATING\" : order}`)\r\n   }\r\n\r\n   const SearchRating = (render, handle, value, un, percent) => {\r\n      setRatingFrom(value[0])\r\n      setRatingTo(value[1])\r\n   }\r\n   const SearchYear = (render, handle, value, un, percent) => {\r\n      setYearFrom(value[0])\r\n      setYearTo(value[1])\r\n   }\r\n\r\n   const searchSort = value => setOrder(value.target.value)\r\n\r\n   const countryChange = value => setCountry(value.target.value)\r\n\r\n   const genreChange = value => setGenre(value.target.value)\r\n\r\n\r\n   useEffect(() => {\r\n      dispatch(getGenreAndCountries());\r\n   }, [dispatch]);\r\n\r\n\r\n   return (\r\n     <>\r\n        <div className={filterStyle.filter}>\r\n           <div className=\"filter__container\">\r\n              <div className={filterStyle.filter__body}>\r\n                 <h3\r\n                   className={darkTheme ? filterStyle.filter__title + ' ' + filterStyle.dark : filterStyle.filter__title}>Фильтр</h3>\r\n                 <div className=\"filter__genre genre\">\r\n                    <div className=\"genre__container\">\r\n                       <select className={filterStyle.genre__item + ' ' + filterStyle.select} onChange={genreChange}\r\n                               name={\"Genre\"}>\r\n                          <option value=\"\">Жанр</option>\r\n                          {genres.map(genre => <option value={genre.id} key={genre.id}>{genre.genre}</option>)}\r\n                       </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"filter__country country\">\r\n                    <div className=\"country__container\">\r\n                       <select className={filterStyle.country__item + ' ' + filterStyle.select} onChange={countryChange}\r\n                               name={\"Country\"}>\r\n                          <option value=\"\">Страна</option>\r\n                          {countries.map(country => <option key={country.id}\r\n                                                            value={country.id}>{country.country}</option>)}\r\n                       </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"filter__country order\">\r\n                    <div className=\"order__container\">\r\n                       <select className={filterStyle.order__item + ' ' + filterStyle.select} onChange={searchSort}>\r\n                          <option value=\"\">Сортировка</option>\r\n                          <option value=\"RATING\">Rating</option>\r\n                          <option value=\"YEAR\">Year</option>\r\n                       </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className={filterStyle.filter__year + ' ' + filterStyle.year}>\r\n                    <div className=\"year__container\">\r\n                       <h3 className={filterStyle.year__title + ' ' + filterStyle.subtitle}>Год</h3>\r\n                       <div className={filterStyle.year__item}>\r\n                          <Nouislider range={{min: 1900, max: currentYear}}\r\n                                      start={[1900, currentYear]}\r\n                                      step={1}\r\n                                      tooltips\r\n                                      connect\r\n                                      onChange={SearchYear}\r\n                          />\r\n                       </div>\r\n                    </div>\r\n                 </div>\r\n                 <div className={filterStyle.filter__rating + ' ' + filterStyle.rating}>\r\n                    <div className=\"rating__container\">\r\n                       <h3 className={filterStyle.ratting__title + ' ' + filterStyle.subtitle}>Рейтинг</h3>\r\n                       <div className={filterStyle.rating__item}>\r\n                          <Nouislider range={{min: 0, max: 10}}\r\n                                      start={[0, 10]}\r\n                                      step={1}\r\n                                      tooltips\r\n                                      connect\r\n                                      onChange={SearchRating}\r\n                          />\r\n                       </div>\r\n                    </div>\r\n                 </div>\r\n                 <div className={filterStyle.filter__submit}>\r\n                    <button onClick={SubmitFilter}>Применить фильтр</button>\r\n                 </div>\r\n              </div>\r\n           </div>\r\n        </div>\r\n     </>\r\n   );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React from \"react\";\r\nimport style from './preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n      <div className={style.spinner}>\r\n          <div className={style.spinner__head}></div>\r\n      </div>\r\n\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/defaultMovieImage.6bef6ac0.jpg\";","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './films.css'\r\nimport './../../Dark.css'\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\nimport img from './../../assets/img/defaultMovieImage.jpg'\r\nimport {deleteFavouritesFilms, setFavouritesFilms} from \"../../Redux/actions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const CardFilm = ({film, filmId, nameRu, posterUrlPreview, favouriteFilms, rating}) => {\r\n\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   return (\r\n     <div className=\"cards__column\">\r\n        <div className={darkTheme ? \"cards__item dark\": \"cards__item\"}>\r\n           <div className=\"cards__image\">\r\n              <Link to={`/cinemaInfo/${filmId}`}><img src={posterUrlPreview || img} alt=\"\"/></Link>\r\n           </div>\r\n           <div className=\"cards__body\">\r\n              <div className={darkTheme ? \"cards__title dark\":\"cards__title\"}>{nameRu}</div>\r\n               <FavoriteButtons filmId={filmId} favouriteFilms={favouriteFilms} film={film}/>\r\n           </div>\r\n        </div>\r\n     </div>\r\n   )\r\n}\r\n\r\n\r\nexport const FavoriteButtons = ({filmId, favouriteFilms, film}) => {\r\n   const dispatch = useDispatch();\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n   return (\r\n     <>\r\n        {\r\n           favouriteFilms.some((item) => item.filmId === filmId) ?\r\n             <button onClick={() => dispatch(deleteFavouritesFilms(film))}\r\n                     className={darkTheme ? 'cards__btn cards__btn_danger dark':'cards__btn cards__btn_danger'}>Удалить из избранного</button>\r\n             :\r\n             <button onClick={() => dispatch(setFavouritesFilms(film))} className={darkTheme ? 'cards__btn dark':'cards__btn'}>Добавить\r\n                в избранное</button>\r\n        }\r\n     </>\r\n   )\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\nimport {CardFilm} from \"./CardFilm\";\r\nimport {darkThemeSelector, favouriteMovieSelector, fetchingSelector} from \"../../Redux/selectors\";\r\n\r\nconst Films = ({films}) => {\r\n\r\n   console.log('Render Films')\r\n\r\n   const favouriteFilms = useSelector(favouriteMovieSelector)\r\n   const isLoading = useSelector(fetchingSelector)\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   if (films.length === 0) {\r\n      return <h2 className={darkTheme ? 'warningText dark' : 'warningText'}>По вашему запросу ничего не\r\n         найдено!</h2>\r\n   }\r\n\r\n   return (\r\n     <section className=\"cards\">\r\n        <div className=\"cards__row\">\r\n           {isLoading ? <Preloader/> :\r\n             films.map((f) => (\r\n               <CardFilm\r\n                 filmId={f.filmId}\r\n                 film={f}\r\n                 nameRu={f.nameRu}\r\n                 posterUrlPreview={f.posterUrlPreview}\r\n                 favouriteFilms={favouriteFilms}\r\n                 rating={f.rating}\r\n                 key={f.filmId}\r\n               />\r\n             ))}\r\n        </div>\r\n     </section>\r\n\r\n   )\r\n}\r\nexport default Films\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMovieByFilter} from \"../../Redux/actions\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {moviePagesCountSelector, movieSelector} from \"../../Redux/selectors\";\r\n\r\nconst SortFilms = () => {\r\n\r\n   const pagesCount = useSelector(moviePagesCountSelector);\r\n   const films = useSelector(movieSelector);\r\n\r\n   const {ratingFrom, ratingTo, yearFrom, yearTo, genre, country, order} = useParams()\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      console.log(\"Screening of films by genre \")\r\n      dispatch(getMovieByFilter(ratingFrom, ratingTo, yearFrom, yearTo, 1, genre, country, order))\r\n   }, [dispatch,ratingFrom, ratingTo, yearFrom, yearTo, genre, country, order])\r\n\r\n   let onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getMovieByFilter(ratingFrom, ratingTo, yearFrom, yearTo, pageNumber, genre, country, order));\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default SortFilms;\r\n","import Films from \"../Films/Films\";\r\nimport {getFilmsFromSearch} from \"../../Redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {moviePagesCountSelector, movieSelector} from \"../../Redux/selectors\";\r\n\r\nexport const SearchFilms = (props) => {\r\n\r\n   const {name} = useParams();\r\n   const pagesCount = useSelector(moviePagesCountSelector);\r\n   const films = useSelector(movieSelector);\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(getFilmsFromSearch(name, 1));\r\n   }, [dispatch, name])\r\n\r\n   let onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getFilmsFromSearch(name, pageNumber));\r\n   };\r\n\r\n   console.log('Render Show Films By Search');\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n   );\r\n};\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAwaitFilms} from \"../../Redux/actions\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {movieCurrentPageSelector, moviePagesCountSelector, movieSelector} from \"../../Redux/selectors\";\r\n\r\nexport const FilmsAwaitFilms = () => {\r\n\r\n   console.log('Render start page')\r\n\r\n   const pagesCount = useSelector(moviePagesCountSelector);\r\n   const currentPage = useSelector(movieCurrentPageSelector);\r\n   const films = useSelector(movieSelector);\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      dispatch(getAwaitFilms(currentPage));\r\n   }, [dispatch, currentPage])\r\n\r\n   const onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getAwaitFilms(pageNumber))\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n   );\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {getTop100Films} from \"../../Redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {movieCurrentPageSelector, moviePagesCountSelector, movieSelector} from \"../../Redux/selectors\";\r\n\r\nexport const FilmsTop100 = () => {\r\n   console.log('Render Top 100')\r\n   const pagesCount = useSelector(moviePagesCountSelector);\r\n   const currentPage = useSelector(movieCurrentPageSelector);\r\n   const films = useSelector(movieSelector);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(getTop100Films(currentPage))\r\n   }, [dispatch, currentPage])\r\n\r\n   const onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getTop100Films(pageNumber))\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n\r\n\r\n   );\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport './descriptionFilm.css'\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSimilarsMovies, setSelectedFilmById} from \"../../Redux/actions\";\r\nimport 'swiper/swiper.min.css';\r\nimport {FavoriteButtons} from \"../Films/CardFilm\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\nimport {\r\n   darkThemeSelector,\r\n   favouriteMovieSelector,\r\n   fetchingSelector, movieSimilarsSelector,\r\n   selectedMovieSelector\r\n} from \"../../Redux/selectors\";\r\nimport {Swiper, SwiperSlide} from \"swiper/react/swiper-react\";\r\nimport SwiperCore, {\r\n   FreeMode,Pagination\r\n} from 'swiper';\r\n\r\n\r\nconst DescriptionFilm = () => {\r\n   const {id} = useParams();\r\n   const dispatch = useDispatch();\r\n   const selectedFilm = useSelector(selectedMovieSelector);\r\n   const isLoading = useSelector(fetchingSelector)\r\n   const favouriteFilms = useSelector(favouriteMovieSelector)\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n   const similarsFilm = useSelector(movieSimilarsSelector)\r\n\r\n   useEffect(async () => {\r\n     await dispatch(setSelectedFilmById(id))\r\n     await dispatch(getSimilarsMovies(id))\r\n   }, [dispatch, id])\r\n\r\n   if (!selectedFilm) return null\r\n\r\n   SwiperCore.use([FreeMode,Pagination]);\r\n\r\n\r\n   return (\r\n     <div className={'description'}>\r\n        {isLoading ? <Preloader/> : (\r\n          <div className=\"description__container\">\r\n             <div className=\"description__row\">\r\n                <div className=\"description__column description__column_1\">\r\n                   <div className=\"description__image\">\r\n                      <img src={selectedFilm.posterUrl} alt={''}/><br/>\r\n                   </div>\r\n                </div>\r\n                <div className=\"description__column\">\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Название:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.nameRu}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Слоагн:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.slogan || 'Без слогана'}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div\r\n                           className={darkTheme ? \"description__title dark\" : \"description__title\"}>Продолжительность:\r\n                         </div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.filmLength}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Год:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.year}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Жанр:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.genres.map((g, index) => <span key={index}>{g.genre} </span>)}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Страна:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.countries.map((c, index) => <span key={index}>{c.country} </span>)}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Возратные\r\n                            ограничения:\r\n                         </div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.ratingAgeLimits}+\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                         <FavoriteButtons favouriteFilms={favouriteFilms} film={selectedFilm}\r\n                                          filmId={selectedFilm.filmId}/>\r\n                      </div>\r\n\r\n                   </div>\r\n                </div>\r\n             </div>\r\n             <div className={darkTheme ? \"description__text dark\" : \"description__text\"}>\r\n                <p>\r\n                   {selectedFilm.description}\r\n                </p>\r\n             </div>\r\n             {similarsFilm.length === 0 ? null : <>\r\n               <div className={'similars'}>\r\n                  <h2 className={'similars__title'}>Похожие фильмы</h2>\r\n               </div>\r\n               <Swiper slidesPerView={3} spaceBetween={10}  className=\"mySwiper\"\r\n                       breakpoints={{\r\n                          320: {\r\n                             slidesPerView: 1,\r\n                          },\r\n                          // when window width is >= 569px\r\n                          569: {\r\n                             slidesPerView: 2,\r\n                          },\r\n                          // when window width is >= 769px\r\n                          769: {\r\n                             slidesPerView: 3,\r\n                          },\r\n                          1400: {\r\n                             slidesPerView: 4,\r\n                          },\r\n                       }}\r\n               >\r\n                  {similarsFilm.map(item => (\r\n                    <SwiperSlide>\r\n                       <div className={'similars__img'}>\r\n                          <Link to={`/cinemaInfo/${item.filmId}`}><img src={item.posterUrlPreview} alt=\"\"/></Link>\r\n                       </div>\r\n                    </SwiperSlide>\r\n                  ))}\r\n\r\n               </Swiper>\r\n               </>\r\n             }\r\n          </div>\r\n\r\n\r\n        )}\r\n\r\n\r\n\r\n\r\n     </div>\r\n   )\r\n}\r\nexport default DescriptionFilm\r\n","import React, {useState} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {partitionFavoriteMovie} from \"../../Redux/selectors\";\r\n\r\nexport const FavouriteFilms = () => {\r\n   const favouriteFilms = useSelector(partitionFavoriteMovie)\r\n   const [currentPage, setCurrentPage] = useState(0)\r\n\r\n\r\n   console.log(favouriteFilms)\r\n\r\n   let totalPage = 1\r\n\r\n   if(!Array.isArray(favouriteFilms[0])){\r\n      totalPage = 1\r\n   }else{\r\n      totalPage = favouriteFilms.length\r\n   }\r\n   if(totalPage === currentPage) {\r\n      setCurrentPage((prev)=>prev-1)\r\n   }\r\n   console.log(\"totalPage = \", totalPage, \"curernt page = \", currentPage)\r\n   const onPageChanged = (data) => {\r\n     let pageNumber = data.selected\r\n\r\n      setCurrentPage(pageNumber)\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={totalPage}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n\r\n        />\r\n        <Films films={!Array.isArray(favouriteFilms[0]) ? favouriteFilms : favouriteFilms[currentPage]} />\r\n     </div>\r\n\r\n\r\n   );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nexport const StyleMobile = (initial, styleName, val1, val2) => {\r\n   let resultStyle = styleName\r\n   if(val1) resultStyle+= ' ' + initial.active\r\n   if(val2) resultStyle+= ' ' + initial.dark\r\n   return resultStyle\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport header from './header.module.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\nimport logo from './../../logo.svg'\r\nimport {StyleMobile} from \"../utils/StyleMob\";\r\n\r\n\r\nexport const Header = ({themeToggler, burgerActive, setBurgerActive}) => {\r\n\r\n   console.log('Render Header')\r\n   const history = useHistory();\r\n   const [searchValue, setSearchValue] = useState('');\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n   const [timer, setTimer] = useState(null)\r\n   const dispatch = useDispatch()\r\n\r\n   const search = (e) => setSearchValue(e.target.value)\r\n\r\n   useEffect(()=>{\r\n      if (searchValue === ''){\r\n         return\r\n      }\r\n      if (timer) {\r\n         clearTimeout(timer)\r\n      }\r\n      setTimer(\r\n        setTimeout(async () => {\r\n           await history.push(`/film/${searchValue}`)\r\n        }, 500)\r\n      )\r\n   },[searchValue])\r\n\r\n   useEffect(()=>{\r\n      document.querySelector('body').classList.toggle('lock')\r\n   }, [burgerActive])\r\n\r\n   return (\r\n     <header className={darkTheme ? header.header + ' ' + header.dark : header.header}>\r\n        <div className={header.header__container}>\r\n           <div className={header.header__body}>\r\n              <div className={header.header__column + ' ' + header.header__column_1}>\r\n                 <Link to=\"/\" className={header.header__logo}><img src={logo} alt=\"\"/> </Link>\r\n                 <div className={StyleMobile(header, header.header__burger, burgerActive, darkTheme)}\r\n                      onClick={() => setBurgerActive(prev => !prev)}>\r\n                    <span></span>\r\n                 </div>\r\n                 <nav className={StyleMobile(header, header.header__menu, burgerActive, darkTheme)}>\r\n                    <ul className={header.header__list}>\r\n                       <li><Link to=\"/top100\" className={darkTheme ? header.header__link + ' ' + header.dark : header.header__link} onClick={(prev)=>setBurgerActive(!prev)}>Топ 100</Link></li>\r\n                       <li><Link to=\"/favourite\" className={darkTheme ? header.header__link + ' ' + header.dark : header.header__link} onClick={(prev)=>setBurgerActive(!prev)}>Избранное</Link></li>\r\n                       <li className={header.themeCheck}>\r\n                          <label htmlFor={'theme'} className={darkTheme ? header.header__link + ' ' + header.dark : header.header__link}>Темная тема</label>\r\n                          <label className={header.switch}>\r\n                             <input type=\"checkbox\" checked={darkTheme && true} onChange={()=>dispatch(themeToggler())} id={'theme'}/>\r\n                             <span className={header.slider + ' ' + header.round}></span>\r\n                          </label>\r\n                       </li>\r\n                    </ul>\r\n                 </nav>\r\n              </div>\r\n              <div className={header.header__column}>\r\n                 <form className={'form'}>\r\n                    <input\r\n                      onChange={(e) => search(e)} placeholder=\"Введите название фильма\"\r\n                      className={darkTheme ? header.inputSearch + ' ' + header.inputSearchDark : header.inputSearch}\r\n                      value={searchValue}\r\n                    />\r\n                    <div className={darkTheme ? header.search + ' ' + header.searchDark : header.search}></div>\r\n                 </form>\r\n              </div>\r\n           </div>\r\n        </div>\r\n     </header>\r\n   );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport filterStyle from './Filter.module.css'\r\nimport Filter from \"./Filter\";\r\nimport {StyleMobile} from \"../utils/StyleMob\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {darkThemeSelector, spoilerFilterMobSelector} from \"../../Redux/selectors\";\r\nimport {setSpoilerShow} from \"../../Redux/actions\";\r\n\r\nexport const FilterMob = () => {\r\n\r\n   const displaySpoiler = useSelector(spoilerFilterMobSelector)\r\n   const dispatch = useDispatch()\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   return (\r\n     <div className={filterStyle.spoiler}>\r\n        <div className={filterStyle.spoiler__item}>\r\n           <h2\r\n             className={StyleMobile(filterStyle, filterStyle.spoiler__title, displaySpoiler, darkTheme)}\r\n             onClick={()=>dispatch(setSpoilerShow(displaySpoiler))}>\r\n              Фильтр\r\n           </h2>\r\n           <div className={displaySpoiler ? filterStyle.spoiler__body + ' ' + filterStyle.active : filterStyle.spoiler__body}>\r\n              <Filter />\r\n           </div>\r\n         </div>\r\n     </div>\r\n\r\n   )\r\n}","import React, {memo, useEffect, useState} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './reset.css'\nimport './Dark.css'\nimport './App.css'\nimport Filter from \"./Components/Filter/Filter\";\nimport SortFilmsOnGenre from \"./Components/ShowFilms/SortFilms\";\nimport {SearchFilms} from \"./Components/ShowFilms/SearchFilms\";\nimport {FilmsAwaitFilms} from \"./Components/ShowFilms/FilmsAwaitFilms\";\nimport {FilmsTop100} from \"./Components/ShowFilms/FilmsTop100\";\nimport DescriptionFilm from \"./Components/DescriptionFilm/DescriptionFilm\";\nimport {FavouriteFilms} from \"./Components/ShowFilms/FavoutiteFilms\";\nimport {darkThemeSelector} from \"./Redux/selectors\";\nimport {Header} from \"./Components/Header/Header\";\nimport {FilterMob} from \"./Components/Filter/FilterMob\";\nimport {useSelector} from \"react-redux\";\nimport {changeTheme} from \"./Redux/actions\";\n\n\nconst MemoShowOnSearchFilms = memo(SearchFilms);\nconst MemoFilmsTop100 = memo(FilmsTop100)\nconst MemoFilmsAwaitFilms = memo(FilmsAwaitFilms)\nconst MemoFavouriteFilms = memo(FavouriteFilms)\nconst MemoDescriptionFilm = memo(DescriptionFilm)\nconst MemoSortFilmsOnGenre = memo(SortFilmsOnGenre)\n\n\nconst App = () => {\n\n   const [burgerActive, setBurgerActive] = useState(false)\n   const darkTheme = useSelector(darkThemeSelector);\n   const [matchesMedia, setMatchesMedia] = useState(window.matchMedia(\"(min-width: 992px)\").matches);\n\n   useEffect(() => {\n      const handler = e => setMatchesMedia(e.matches);\n      window.matchMedia(\"(min-width: 992px)\").addEventListener('change', handler);\n   }, [matchesMedia])\n\n   console.log(\"Render App\")\n\n   const window768 = window.matchMedia('(max-width: 768px)')\n\n   const media = x => x.matches ?  <FilterMob /> : <Filter />\n\n   return (\n     <Router>\n\n        <Header themeToggler={changeTheme} burgerActive={burgerActive} setBurgerActive={setBurgerActive}/>\n\n        <div className={darkTheme ? \"container dark\" : \"container\"}>\n           { media(window768)}\n             <Switch>\n                <Route exact path={\"/\"} component={MemoFilmsAwaitFilms}/>\n                <Route path={\"/favourite\"} component={MemoFavouriteFilms}/>\n                <Route path={\"/cinemaInfo/:id\"} render={() => <MemoDescriptionFilm/>}/>\n                <Route path=\"/film/:name\" component={MemoShowOnSearchFilms}/>\n                <Route path=\"/films/:ratingFrom/:ratingTo/:yearFrom/:yearTo/:genre/:country/:order\"\n                       component={MemoSortFilmsOnGenre}/>\n                <Route path=\"/top100\" render={() => <MemoFilmsTop100/>}/>\n             </Switch>\n        </div>\n\n     </Router>\n\n   );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"../src/Redux/storeRedux\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {persistor} from \"./Redux/storeRedux\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <HashRouter  >\n        <Provider store={store}>\n            <PersistGate  persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </HashRouter>,\n    document.getElementById(\"root\")\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}