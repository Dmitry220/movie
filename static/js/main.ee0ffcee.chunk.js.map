{"version":3,"sources":["Components/Loader/preloader.module.css","Components/Header/header.module.css","Components/Filter/Filter.module.css","reportWebVitals.js","Redux/typeAction.js","Redux/filmsReduser.js","Redux/headerReducer.js","Redux/favouritesReduser.js","Redux/filterReduser.js","Redux/themeReduser.js","Redux/storeRedux.js","API/API.js","Redux/actions.js","Redux/selectors.js","Components/Filter/Filter.js","Components/Loader/Preloader.js","assets/img/defaultMovieImage.jpg","Components/Films/CardFilm.js","Components/Films/Films.js","Components/ShowFilms/SortFilms.js","Components/ShowFilms/SearchFilms.js","Components/ShowFilms/FilmsAwaitFilms.js","Components/ShowFilms/FilmsTop100.js","Components/DescriptionFilm/DescriptionFilm.js","Components/ShowFilms/FavoutiteFilms.js","logo.svg","Components/utils/StyleMob.js","Components/Header/Header.js","Components/Filter/FilterMob.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHOW_FILMS","SHOW_LOADING","HIDE_LOADING","HANDLER_INPUT","GET_GENRES","SET_FAVOURITE_FILMS","DELETE_FAVOURITE_FILMS","SET_SELECTED_FILM_ID","DELETE_SELECTED_FILM_ID","CHANGE_THEME","DISPLAY_SHOW","initialState","pagesCount","films","isLoading","currentPage","selectedMovie","isResponse","searchTest","favouriteFilms","genres","countries","displaySpoiler","darkTheme","persistConfig","key","storage","whitelist","persistConfigTheme","reducers","combineReducers","state","action","type","payload","header","text","filter","status","persistReducer","film","filmId","theme","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","instance","axios","baseURL","headers","filmsAPI","get","inputText","ratingFrom","ratingTo","yearFrom","yearTo","page","genre","country","order","id","showLoading","hideLoading","setFilms","getTop100Films","dispatch","response","data","catch","console","log","getAwaitFilms","getFilmsFromSearch","query","setSpoilerShow","getGenreAndCountries","getMovieByFilter","setSelectedFilmByIdAC","changeTheme","darkThemeSelector","favoriteMovieSelector","array","subarray","length","i","push","Math","ceil","slice","Filter","history","useHistory","useDispatch","useSelector","currentYear","Date","getFullYear","useState","setGenre","setCountry","setRatingTo","setRatingFrom","setYearTo","setYearFrom","setOrder","useEffect","className","filterStyle","filter__body","filter__title","dark","genre__item","select","onChange","value","target","name","map","country__item","order__item","filter__year","year","year__title","subtitle","year__item","range","min","max","start","step","tooltips","connect","render","handle","un","percent","filter__rating","rating","ratting__title","rating__item","filter__submit","onClick","undefined","Preloader","style","spinner","spinner__head","CardFilm","nameRu","posterUrlPreview","to","src","img","alt","FavoriteButtons","some","item","Films","f","SortFilms","useParams","onPageChanged","pageNumber","selected","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","SearchFilms","props","FilmsAwaitFilms","FilmsTop100","DescriptionFilm","selectedFilm","setSelectedFilmById","posterUrl","slogan","filmLength","g","index","c","ratingAgeLimits","description","FavouriteFilms","setCurrentPage","totalPage","Array","isArray","StyleMobile","initial","styleName","val1","val2","resultStyle","active","Header","themeToggler","burgerActive","setBurgerActive","searchValue","setSearchValue","timer","setTimer","clearTimeout","setTimeout","a","document","querySelector","classList","toggle","header__container","header__body","header__column","header__column_1","header__logo","logo","header__burger","prev","header__menu","header__list","header__link","themeCheck","htmlFor","switch","checked","slider","round","e","search","placeholder","inputSearch","inputSearchDark","searchDark","FilterMob","spoiler","spoiler__item","spoiler__title","spoiler__body","MemoShowOnSearchFilms","memo","MemoFilmsTop100","MemoFilmsAwaitFilms","MemoFavouriteFilms","MemoDescriptionFilm","MemoSortFilmsOnGenre","SortFilmsOnGenre","App","matchMedia","matches","matchesMedia","setMatchesMedia","addEventListener","x","window768","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ee0ffcee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"preloader_spinner__35WkY\",\"spinner__head\":\"preloader_spinner__head__uvGMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__J3qgt\",\"out\":\"header_out__10H5V\",\"dark\":\"header_dark__2aHwA\",\"header__container\":\"header_header__container__3RYDU\",\"header__body\":\"header_header__body__2ufpH\",\"header__column\":\"header_header__column__1_WTS\",\"header__column_1\":\"header_header__column_1__1PuED\",\"header__menu\":\"header_header__menu__16WJ2\",\"header__list\":\"header_header__list__39Xxp\",\"header__logo\":\"header_header__logo__2zjR8\",\"header__burger\":\"header_header__burger__37uwz\",\"header__link\":\"header_header__link__2OkAC\",\"header__btn\":\"header_header__btn__3IshA\",\"active\":\"header_active__kVMDG\",\"switch\":\"header_switch__2RuJl\",\"slider\":\"header_slider__3KY-x\",\"round\":\"header_round__3Rs_u\",\"themeCheck\":\"header_themeCheck__2FHAH\",\"search\":\"header_search__8oj5c\",\"searchDark\":\"header_searchDark__2s4qs\",\"inputSearch\":\"header_inputSearch__3kC07\",\"inputSearchDark\":\"header_inputSearchDark__2l_MH\",\"clue\":\"header_clue__2fv4u\",\"clue__list\":\"header_clue__list__1bRuA\",\"clue__item\":\"header_clue__item__1RRGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__XHns-\",\"filter__title\":\"Filter_filter__title__5gf7b\",\"dark\":\"Filter_dark__3vMcP\",\"subtitle\":\"Filter_subtitle__3o8a1\",\"filter__body\":\"Filter_filter__body__2CwuB\",\"rating__item\":\"Filter_rating__item__tkoa4\",\"year__item\":\"Filter_year__item__1bE3k\",\"select\":\"Filter_select__6jKWr\",\"select__option\":\"Filter_select__option__s_iwn\",\"value__container\":\"Filter_value__container__3GZPa\",\"value__column\":\"Filter_value__column__2vBAW\",\"filter__submit\":\"Filter_filter__submit__3R8Ri\",\"spoiler__item\":\"Filter_spoiler__item__f5RoG\",\"spoiler__title\":\"Filter_spoiler__title__Gpq20\",\"spoiler__body\":\"Filter_spoiler__body__1OgCJ\",\"active\":\"Filter_active__2HQZd\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SHOW_FILMS = \"SHOW_FILMS\";\r\nexport const SHOW_LOADING = 'SHOW_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';\r\nexport const HANDLER_INPUT = 'HANDLER_INPUT'\r\nexport const GET_GENRES = 'GET_GENRES'\r\nexport const SET_FAVOURITE_FILMS = 'SET_FAVOURITE_FILMS'\r\nexport const DELETE_FAVOURITE_FILMS = 'DELETE_FAVOURITE_FILMS'\r\nexport const SET_SELECTED_FILM_ID = 'SET_SELECTED_FILM_ID'\r\nexport const DELETE_SELECTED_FILM_ID = 'DELETE_SELECTED_FILM_ID'\r\nexport const CHANGE_THEME = 'CHANGE_THEME'\r\nexport const DISPLAY_SHOW = 'DISPLAY_SHOW'\r\nexport const API_KEY = \"303097b4-2b0a-46a5-8aae-4a1137273ff1\";\r\n\r\n","import {\r\n    SHOW_LOADING,\r\n    HIDE_LOADING,\r\n    SHOW_FILMS,\r\n    SET_SELECTED_FILM_ID,\r\n    DELETE_SELECTED_FILM_ID\r\n} from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    pagesCount: null,\r\n    films: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    selectedMovie: null,\r\n    isResponse: false,\r\n}\r\n\r\nexport const filmsReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SHOW_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.payload.films,\r\n                pagesCount: action.payload.pagesCount,\r\n                currentPage: action.payload.currentPage,\r\n            }\r\n        case SHOW_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading : true\r\n            }\r\n        case HIDE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading : false\r\n            }\r\n        case SET_SELECTED_FILM_ID:\r\n            return {\r\n                ...state,\r\n                selectedMovie: action.payload\r\n            }\r\n        case DELETE_SELECTED_FILM_ID:\r\n            return {\r\n                ...state,\r\n                selectedMovie: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { HANDLER_INPUT } from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    searchTest: \"\",\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HANDLER_INPUT:\r\n            return {\r\n                ...state,\r\n                searchTest: action.text,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {DELETE_FAVOURITE_FILMS, SET_FAVOURITE_FILMS} from \"./typeAction\";\r\n\r\n\r\nlet initialState = {\r\n    favouriteFilms: [],\r\n}\r\n\r\nexport const favouriteReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms, action.payload],\r\n            }\r\n        case DELETE_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms.filter(film=>film.filmId !== action.payload.filmId)],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {DISPLAY_SHOW, GET_GENRES} from \"./typeAction\";\r\n\r\n\r\nconst initialState = {\r\n    genres: [],\r\n    countries: [],\r\n    displaySpoiler: false\r\n}\r\n\r\nexport const filterReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.genres,\r\n                countries: action.countries\r\n            }\r\n        case DISPLAY_SHOW:\r\n            return {\r\n                ...state,\r\n                displaySpoiler: !action.status\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {CHANGE_THEME} from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    darkTheme: false,\r\n};\r\n\r\nexport const themeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_THEME:\r\n            return {\r\n\r\n                ...state,\r\n                darkTheme: !state.darkTheme,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { filmsReduser } from \"./filmsReduser\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {favouriteReduser} from \"./favouritesReduser\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {filterReduser} from \"./filterReduser\";\r\nimport {themeReducer} from \"./themeReduser\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['favouriteFilms']\r\n};\r\nconst persistConfigTheme = {\r\n    key: 'theme',\r\n    storage,\r\n    whitelist: ['darkTheme']\r\n};\r\n\r\nlet reducers = combineReducers({\r\n    films : filmsReduser,\r\n    header: headerReducer,\r\n    filter: filterReduser,\r\n    favouriteFilms: persistReducer(persistConfig, favouriteReduser),\r\n    theme: persistReducer(persistConfigTheme, themeReducer)\r\n})\r\n\r\nconst store = createStore(reducers,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import * as axios from \"axios\";\r\nimport { API_KEY } from \"../Redux/typeAction\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://kinopoiskapiunofficial.tech/api/v2.1/films\",\r\n    headers: {\r\n        \"Content-Type\": \"aplication/json\",\r\n        \"X-API-KEY\": API_KEY,\r\n    },\r\n});\r\n\r\nexport const filmsAPI = {\r\n\r\n    getFilmsTOP100(currentPage=1) {\r\n        return instance.get(`/top?type=TOP_100_POPULAR_FILMS&page=${currentPage}`);\r\n    },\r\n    getAwaitFilms(currentPage) {\r\n        return instance.get(`/top?type=TOP_AWAIT_FILMS&page=${currentPage}`);\r\n\r\n    },\r\n    getFilmsFromSearch(inputText, currentPage) {\r\n        return instance.get(\r\n            `/search-by-keyword?keyword=${inputText}&page=${currentPage}`\r\n        );\r\n    },\r\n    getListGenreAndCountry (){\r\n        return instance.get(`filters`);\r\n    },\r\n\r\n    filterSearch (ratingFrom , ratingTo , yearFrom , yearTo , page , genre , country, order){\r\n        return instance.get(`/search-by-filters?genre=${genre}&country=${country}&order=${order}&type=ALL&ratingFrom=${ratingFrom}&ratingTo=${ratingTo}&yearFrom=${yearFrom}&yearTo=${yearTo}&page=${page}`)\r\n    },\r\n    getFilmsById(id){\r\n        return instance.get(`${id}`)\r\n    }\r\n};\r\n","import {filmsAPI} from \"../API/API\";\r\nimport {\r\n    SHOW_FILMS,\r\n    GET_GENRES,\r\n    HIDE_LOADING,\r\n    SHOW_LOADING,\r\n    SET_FAVOURITE_FILMS,\r\n    DELETE_FAVOURITE_FILMS,\r\n    SET_SELECTED_FILM_ID,\r\n    DELETE_SELECTED_FILM_ID, CHANGE_THEME, DISPLAY_SHOW,\r\n} from \"./typeAction\";\r\n\r\n\r\nexport const showLoading = () => ({type: SHOW_LOADING});\r\nexport const hideLoading = () => ({type: HIDE_LOADING});\r\n\r\nexport const setGenresAndCountries = (genres, countries) => ({\r\n    type: GET_GENRES,\r\n    genres: genres,\r\n    countries: countries\r\n});\r\n\r\nexport const setFilms = (films, pagesCount, currentPage) => ({\r\n    type: SHOW_FILMS,\r\n    payload: {\r\n        films,\r\n        pagesCount,\r\n        currentPage\r\n    }\r\n})\r\n\r\nexport const getTop100Films = (currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n\r\n    filmsAPI\r\n        .getFilmsTOP100(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getAwaitFilms = (currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getAwaitFilms(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getFilmsFromSearch = (query, currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getFilmsFromSearch(query, currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n            dispatch(setSpoilerShow(true))\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\n\r\nexport const getGenreAndCountries  = () => (dispatch) => {\r\n    filmsAPI.getListGenreAndCountry().then((response) => {\r\n        dispatch(setGenresAndCountries(response.data.genres, response.data.countries));\r\n    });\r\n};\r\n\r\nexport const getMovieByFilter = (ratingFrom, ratingTo, yearFrom, yearTo, page ,genre, country, order) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .filterSearch(ratingFrom, ratingTo, yearFrom, yearTo, page, genre, country,order)\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                dispatch(setFilms(response.data.films, response.data.pagesCount, page))\r\n                dispatch(setSpoilerShow(true))\r\n                dispatch(hideLoading())\r\n            }\r\n        })\r\n        .catch(() => {\r\n            dispatch(setFilms([], null, null))\r\n            dispatch(hideLoading())\r\n    });\r\n};\r\n\r\nexport const setFavouritesFilms = (payload) => ({type: SET_FAVOURITE_FILMS, payload})\r\n\r\nexport const deleteFavouritesFilms = (payload) => ({type: DELETE_FAVOURITE_FILMS, payload})\r\n\r\nexport const setSelectedFilmById = (id) => (dispatch)=> {\r\n    dispatch(showLoading())\r\n    filmsAPI.getFilmsById(id).then((response) => {\r\n        dispatch(setSelectedFilmByIdAC(response.data.data));\r\n        dispatch(setSpoilerShow(true))\r\n        dispatch(hideLoading())\r\n    });\r\n}\r\n\r\nexport const setSelectedFilmByIdAC = (payload) => ({type: SET_SELECTED_FILM_ID, payload})\r\n\r\nexport const deleteSelectedFilmById = () => ({type: DELETE_SELECTED_FILM_ID})\r\n\r\nexport const changeTheme = () => ({type: CHANGE_THEME})\r\n\r\nexport const setSpoilerShow = (status) => ({type:DISPLAY_SHOW, status})","export const darkThemeSelector = (state) => {\r\n    return state.theme.darkTheme\r\n}\r\n\r\nexport  const favoriteMovieSelector = (state) => {\r\n    let array = state.favouriteFilms.favouriteFilms\r\n    let size = 20;\r\n    let subarray = [];\r\n\r\n    if(array.length <= size) {\r\n        for (let i = 0; i < array.length; i++){\r\n            subarray.push(array[i])\r\n        }\r\n        return subarray\r\n    }else{\r\n        for (let i = 0; i <Math.ceil(array.length/size); i++){\r\n            subarray[i] = array.slice((i*size), (i*size) + size);\r\n        }\r\n\r\n        return subarray\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getGenreAndCountries} from \"../../Redux/actions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport filterStyle from './Filter.module.css'\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\n\r\nconst Filter = () => {\r\n   let history = useHistory()\r\n   const dispatch = useDispatch()\r\n   const genres = useSelector((state) => state.filter.genres);\r\n   const countries = useSelector((state) => state.filter.countries);\r\n   let currentTime = new Date()\r\n   let currentYear = currentTime.getFullYear();\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   const [genre, setGenre] = useState()\r\n   const [country, setCountry] = useState()\r\n   const [ratingTo, setRatingTo] = useState()\r\n   const [ratingFrom, setRatingFrom] = useState()\r\n   const [yearTo, setYearTo] = useState()\r\n   const [yearFrom, setYearFrom] = useState()\r\n   const [order, setOrder] = useState()\r\n\r\n   const SubmitFilter = () => {\r\n      history.push(`/films/${ratingFrom === undefined ? 0 : ratingFrom}/${ratingTo === undefined ? 10 : ratingTo}/${yearFrom === undefined ? 1950 : yearFrom}/${yearTo === undefined ? currentYear : yearTo}/${genre === undefined ? 0 : genre}/${country === undefined ? 0 : country}/${order === undefined ? \"RATING\" : order}`)\r\n   }\r\n\r\n   const SearchRating = (render, handle, value, un, percent) => {\r\n      setRatingFrom(value[0])\r\n      setRatingTo(value[1])\r\n   }\r\n   const SearchYear = (render, handle, value, un, percent) => {\r\n      setYearFrom(value[0])\r\n      setYearTo(value[1])\r\n   }\r\n\r\n   const searchSort = value => setOrder(value.target.value)\r\n\r\n   const countryChange = value => setCountry(value.target.value)\r\n\r\n   const genreChange = value => setGenre(value.target.value)\r\n\r\n\r\n   useEffect(() => {\r\n      dispatch(getGenreAndCountries());\r\n   }, [dispatch]);\r\n\r\n\r\n   return (\r\n     <>\r\n        <div className={filterStyle.filter}>\r\n           <div className=\"filter__container\">\r\n              <div className={filterStyle.filter__body}>\r\n                 <h3\r\n                   className={darkTheme ? filterStyle.filter__title + ' ' + filterStyle.dark : filterStyle.filter__title}>Фильтр</h3>\r\n                 <div className=\"filter__genre genre\">\r\n                    <div className=\"genre__container\">\r\n                       <select className={filterStyle.genre__item + ' ' + filterStyle.select} onChange={genreChange}\r\n                               name={\"Genre\"}>\r\n                          <option value=\"\">Жанр</option>\r\n                          {genres.map(genre => <option value={genre.id} key={genre.id}>{genre.genre}</option>)}\r\n                       </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"filter__country country\">\r\n                    <div className=\"country__container\">\r\n                       <select className={filterStyle.country__item + ' ' + filterStyle.select} onChange={countryChange}\r\n                               name={\"Country\"}>\r\n                          <option value=\"\">Страна</option>\r\n                          {countries.map(country => <option key={country.id}\r\n                                                            value={country.id}>{country.country}</option>)}\r\n                       </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"filter__country order\">\r\n                    <div className=\"order__container\">\r\n                       <select className={filterStyle.order__item + ' ' + filterStyle.select} onChange={searchSort}>\r\n                          <option value=\"\">Сортировка</option>\r\n                          <option value=\"RATING\">Rating</option>\r\n                          <option value=\"YEAR\">Year</option>\r\n                       </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className={filterStyle.filter__year + ' ' + filterStyle.year}>\r\n                    <div className=\"year__container\">\r\n                       <h3 className={filterStyle.year__title + ' ' + filterStyle.subtitle}>Год</h3>\r\n                       <div className={filterStyle.year__item}>\r\n                          <Nouislider range={{min: 1900, max: currentYear}}\r\n                                      start={[1900, currentYear]}\r\n                                      step={1}\r\n                                      tooltips\r\n                                      connect\r\n                                      onChange={SearchYear}\r\n                          />\r\n                       </div>\r\n                    </div>\r\n                 </div>\r\n                 <div className={filterStyle.filter__rating + ' ' + filterStyle.rating}>\r\n                    <div className=\"rating__container\">\r\n                       <h3 className={filterStyle.ratting__title + ' ' + filterStyle.subtitle}>Рейтинг</h3>\r\n                       <div className={filterStyle.rating__item}>\r\n                          <Nouislider range={{min: 0, max: 10}}\r\n                                      start={[0, 10]}\r\n                                      step={1}\r\n                                      tooltips\r\n                                      connect\r\n                                      onChange={SearchRating}\r\n                          />\r\n                       </div>\r\n                    </div>\r\n                 </div>\r\n                 <div className={filterStyle.filter__submit}>\r\n                    <button onClick={SubmitFilter}>Применить фильтр</button>\r\n                 </div>\r\n              </div>\r\n           </div>\r\n        </div>\r\n     </>\r\n   );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import React from \"react\";\r\nimport style from './preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    // const antIcon = <LoadingOutlined style={{ fontSize: 156 }} spin />;\r\n    return (\r\n      <div className={style.spinner}>\r\n          <div className={style.spinner__head}></div>\r\n      </div>\r\n\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/defaultMovieImage.6bef6ac0.jpg\";","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport './films.css'\r\nimport './../../Dark.css'\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\nimport img from './../../assets/img/defaultMovieImage.jpg'\r\nimport {deleteFavouritesFilms, setFavouritesFilms} from \"../../Redux/actions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const CardFilm = ({film, filmId, nameRu, posterUrlPreview, favouriteFilms, rating}) => {\r\n\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   return (\r\n     <div className=\"cards__column\">\r\n        <div className={darkTheme ? \"cards__item dark\": \"cards__item\"}>\r\n           <div className=\"cards__image\">\r\n              <Link to={`/cinemaInfo/${filmId}`}><img src={posterUrlPreview || img} alt=\"\"/></Link>\r\n           </div>\r\n           <div className=\"cards__body\">\r\n              <div className={darkTheme ? \"cards__title dark\":\"cards__title\"}>{nameRu}</div>\r\n               <FavoriteButtons filmId={filmId} favouriteFilms={favouriteFilms} film={film}/>\r\n           </div>\r\n        </div>\r\n     </div>\r\n   )\r\n}\r\n\r\n\r\nexport const FavoriteButtons = ({filmId, favouriteFilms, film}) => {\r\n   const dispatch = useDispatch();\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n   return (\r\n     <>\r\n        {\r\n           favouriteFilms.some((item) => item.filmId === filmId) ?\r\n             <button onClick={() => dispatch(deleteFavouritesFilms(film))}\r\n                     className={darkTheme ? 'cards__btn cards__btn_danger dark':'cards__btn cards__btn_danger'}>Удалить из избранного</button>\r\n             :\r\n             <button onClick={() => dispatch(setFavouritesFilms(film))} className={darkTheme ? 'cards__btn dark':'cards__btn'}>Добавить\r\n                в избранное</button>\r\n        }\r\n     </>\r\n   )\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\nimport {CardFilm} from \"./CardFilm\";\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\n\r\nconst Films = ({films}) => {\r\n\r\n   console.log('Render Films')\r\n\r\n   const favouriteFilms = useSelector((state) => state.favouriteFilms.favouriteFilms)\r\n   const isLoading = useSelector(state => state.films.isLoading)\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   if (films.length === 0) {\r\n      return <h2 className={darkTheme ? 'warningText dark' : 'warningText'}>По вашему запросу ничего не\r\n         найдено!</h2>\r\n   }\r\n\r\n   return (\r\n     <section className=\"cards\">\r\n        <div className=\"cards__row\">\r\n           {isLoading ? <Preloader/> :\r\n             films.map((f) => (\r\n               <CardFilm\r\n                 filmId={f.filmId}\r\n                 film={f}\r\n                 nameRu={f.nameRu}\r\n                 posterUrlPreview={f.posterUrlPreview}\r\n                 favouriteFilms={favouriteFilms}\r\n                 rating={f.rating}\r\n                 key={f.filmId}\r\n               />\r\n             ))}\r\n        </div>\r\n     </section>\r\n\r\n   )\r\n}\r\nexport default Films\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMovieByFilter} from \"../../Redux/actions\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst SortFilms = () => {\r\n\r\n   const pagesCount = useSelector(state => state.films.pagesCount);\r\n   const films = useSelector(state => state.films.films);\r\n   const {ratingFrom, ratingTo, yearFrom, yearTo, genre, country, order} = useParams()\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      console.log(\"Screening of films by genre \")\r\n      dispatch(getMovieByFilter(ratingFrom, ratingTo, yearFrom, yearTo, 1, genre, country, order))\r\n   }, [dispatch,ratingFrom, ratingTo, yearFrom, yearTo, genre, country, order])\r\n\r\n   let onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getMovieByFilter(ratingFrom, ratingTo, yearFrom, yearTo, pageNumber, genre, country, order));\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default SortFilms;\r\n","import Films from \"../Films/Films\";\r\nimport {getFilmsFromSearch} from \"../../Redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport const SearchFilms = (props) => {\r\n\r\n   const {name} = useParams();\r\n   const films = useSelector(state => state.films.films)\r\n   const pagesCount = useSelector(state => state.films.pagesCount)\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(getFilmsFromSearch(name, 1));\r\n   }, [dispatch, name])\r\n\r\n   let onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getFilmsFromSearch(name, pageNumber));\r\n   };\r\n\r\n   console.log('Render Show Films By Search');\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n   );\r\n};\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAwaitFilms} from \"../../Redux/actions\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport const FilmsAwaitFilms = () => {\r\n\r\n   console.log('Render start page')\r\n\r\n   const pagesCount = useSelector(state => state.films.pagesCount);\r\n   const currentPage = useSelector(state => state.films.currentPage);\r\n   const films = useSelector(state => state.films.films);\r\n   const dispatch = useDispatch()\r\n\r\n   useEffect(() => {\r\n      dispatch(getAwaitFilms(currentPage));\r\n   }, [dispatch, currentPage])\r\n\r\n   const onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getAwaitFilms(pageNumber))\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n   );\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {getTop100Films} from \"../../Redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport const FilmsTop100 = () => {\r\n   console.log('Render Top 100')\r\n   const currentPage = useSelector(state => state.films.currentPage)\r\n   const pagesCount = useSelector(state => state.films.pagesCount)\r\n   const films = useSelector(state => state.films.films)\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(getTop100Films(currentPage))\r\n   }, [dispatch, currentPage])\r\n\r\n   const onPageChanged = (data) => {\r\n      let pageNumber = data.selected + 1\r\n      dispatch(getTop100Films(pageNumber))\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={films}/>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pagesCount > 20 ? 20 : pagesCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n     </div>\r\n\r\n\r\n   );\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport './descriptionFilm.css'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteSelectedFilmById, setSelectedFilmById} from \"../../Redux/actions\";\r\nimport {FavoriteButtons} from \"../Films/CardFilm\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\n\r\nconst DescriptionFilm = () => {\r\n   const {id} = useParams();\r\n   const dispatch = useDispatch();\r\n   const selectedFilm = useSelector(state => state.films.selectedMovie);\r\n   const isLoading = useSelector(state => state.films.isLoading)\r\n   const favouriteFilms = useSelector((state) => state.favouriteFilms.favouriteFilms)\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   useEffect(() => {\r\n      dispatch(setSelectedFilmById(id))\r\n      return () => {\r\n         dispatch(deleteSelectedFilmById())\r\n      }\r\n   }, [dispatch, id])\r\n\r\n   if(!selectedFilm) return null\r\n\r\n   return (\r\n     <div className={'description'}>\r\n        {isLoading ? <Preloader/> :(\r\n          <div className=\"description__container\">\r\n             <div className=\"description__row\">\r\n                <div className=\"description__column description__column_1\">\r\n                   <div className=\"description__image\">\r\n                      <img src={selectedFilm.posterUrl} alt={''}/><br/>\r\n                   </div>\r\n                </div>\r\n                <div className=\"description__column\">\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Название:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.nameRu}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Слоагн:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.slogan || 'Без слогана'}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Продолжительность:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.filmLength}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Год:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.year}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Жанр:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.genres.map((g, index) => <span key={index}>{g.genre} </span>)}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Страна:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.countries.map((c, index) => <span key={index}>{c.country} </span>)}\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className=\"description__item\">\r\n                         <div className={darkTheme ? \"description__title dark\" : \"description__title\"}>Возратные ограничения:</div>\r\n                         <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                            {selectedFilm.ratingAgeLimits}+\r\n                         </div>\r\n                      </div>\r\n                   </div>\r\n                   <div className=\"description__body\">\r\n                      <div className={darkTheme ? \"description__value dark\" : \"description__value\"}>\r\n                         <FavoriteButtons favouriteFilms={favouriteFilms} film={selectedFilm}\r\n                                          filmId={selectedFilm.filmId}/>\r\n                      </div>\r\n\r\n                   </div>\r\n                </div>\r\n             </div>\r\n             <div className={darkTheme ? \"description__text dark\" : \"description__text\"}>\r\n                <p>\r\n                   {selectedFilm.description}\r\n                </p>\r\n             </div>\r\n          </div>\r\n        )}\r\n\r\n     </div>\r\n   )\r\n}\r\nexport default DescriptionFilm\r\n","import React, {useState} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport {favoriteMovieSelector} from \"../../Redux/selectors\";\r\n\r\nexport const FavouriteFilms = () => {\r\n   const favouriteFilms = useSelector(favoriteMovieSelector)\r\n   const [currentPage, setCurrentPage] = useState(0)\r\n   let totalPage = 1\r\n\r\n   if(!Array.isArray(favouriteFilms[0])){\r\n      totalPage = 1\r\n   }else{\r\n      totalPage = favouriteFilms.length\r\n   }\r\n\r\n   const onPageChanged = (data) => {\r\n     let pageNumber = data.selected\r\n      setCurrentPage(pageNumber)\r\n   };\r\n\r\n   return (\r\n     <div className={'container__film'}>\r\n        <ReactPaginate\r\n          previousLabel={\"Back\"}\r\n          nextLabel={\"Next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={totalPage}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={onPageChanged}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n        <Films films={!Array.isArray(favouriteFilms[0]) ? favouriteFilms : favouriteFilms[currentPage]} />\r\n     </div>\r\n\r\n\r\n   );\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nexport const StyleMobile = (initial, styleName, val1, val2) => {\r\n   let resultStyle = styleName\r\n   if(val1) resultStyle+= ' ' + initial.active\r\n   if(val2) resultStyle+= ' ' + initial.dark\r\n   return resultStyle\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport header from './header.module.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\nimport logo from './../../logo.svg'\r\nimport {StyleMobile} from \"../utils/StyleMob\";\r\n\r\n\r\nexport const Header = ({themeToggler, burgerActive, setBurgerActive}) => {\r\n\r\n   console.log('Render Header')\r\n   const history = useHistory();\r\n   const [searchValue, setSearchValue] = useState('');\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n   const [timer, setTimer] = useState(null)\r\n   const dispatch = useDispatch()\r\n\r\n   const search = (e) => setSearchValue(e.target.value)\r\n\r\n   useEffect(()=>{\r\n      if (searchValue === ''){\r\n         return\r\n      }\r\n      if (timer) {\r\n         clearTimeout(timer)\r\n      }\r\n      setTimer(\r\n        setTimeout(async () => {\r\n           await history.push(`/film/${searchValue}`)\r\n        }, 500)\r\n      )\r\n   },[searchValue])\r\n\r\n   useEffect(()=>{\r\n      document.querySelector('body').classList.toggle('lock')\r\n   }, [burgerActive])\r\n\r\n   return (\r\n     <header className={darkTheme ? header.header + ' ' + header.dark : header.header}>\r\n        <div className={header.header__container}>\r\n           <div className={header.header__body}>\r\n              <div className={header.header__column + ' ' + header.header__column_1}>\r\n                 <Link to=\"/\" className={header.header__logo}><img src={logo} alt=\"\"/> </Link>\r\n                 <div className={StyleMobile(header, header.header__burger, burgerActive, darkTheme)}\r\n                      onClick={() => setBurgerActive(prev => !prev)}>\r\n                    <span></span>\r\n                 </div>\r\n                 <nav className={StyleMobile(header, header.header__menu, burgerActive, darkTheme)}>\r\n                    <ul className={header.header__list}>\r\n                       <li><Link to=\"/top100\" className={darkTheme ? header.header__link + ' ' + header.dark : header.header__link} onClick={(prev)=>setBurgerActive(!prev)}>Топ 100</Link></li>\r\n                       <li><Link to=\"/favourite\" className={darkTheme ? header.header__link + ' ' + header.dark : header.header__link} onClick={(prev)=>setBurgerActive(!prev)}>Избранное</Link></li>\r\n                       <li className={header.themeCheck}>\r\n                          <label htmlFor={'theme'} className={darkTheme ? header.header__link + ' ' + header.dark : header.header__link}>Темная тема</label>\r\n                          <label className={header.switch}>\r\n                             <input type=\"checkbox\" checked={darkTheme && true} onChange={()=>dispatch(themeToggler())} id={'theme'}/>\r\n                             <span className={header.slider + ' ' + header.round}></span>\r\n                          </label>\r\n                       </li>\r\n                    </ul>\r\n                 </nav>\r\n              </div>\r\n              <div className={header.header__column}>\r\n                 <form className={'form'}>\r\n                    <input\r\n                      onChange={(e) => search(e)} placeholder=\"Введите название фильма\"\r\n                      className={darkTheme ? header.inputSearch + ' ' + header.inputSearchDark : header.inputSearch}\r\n                      value={searchValue}\r\n                    />\r\n                    <div className={darkTheme ? header.search + ' ' + header.searchDark : header.search}></div>\r\n                 </form>\r\n              </div>\r\n           </div>\r\n        </div>\r\n     </header>\r\n   );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport filterStyle from './Filter.module.css'\r\nimport Filter from \"./Filter\";\r\nimport {StyleMobile} from \"../utils/StyleMob\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {darkThemeSelector} from \"../../Redux/selectors\";\r\nimport {setSpoilerShow} from \"../../Redux/actions\";\r\n\r\nexport const FilterMob = () => {\r\n\r\n   const displaySpoiler = useSelector(state => state.filter.displaySpoiler)\r\n   const dispatch = useDispatch()\r\n   const darkTheme = useSelector(darkThemeSelector);\r\n\r\n   return (\r\n     <div className={filterStyle.spoiler}>\r\n        <div className={filterStyle.spoiler__item}>\r\n           <h2\r\n             className={StyleMobile(filterStyle, filterStyle.spoiler__title, displaySpoiler, darkTheme)}\r\n             onClick={()=>dispatch(setSpoilerShow(displaySpoiler))}>\r\n              Фильтр\r\n           </h2>\r\n           <div className={displaySpoiler ? filterStyle.spoiler__body + ' ' + filterStyle.active : filterStyle.spoiler__body}>\r\n              <Filter />\r\n           </div>\r\n         </div>\r\n     </div>\r\n\r\n   )\r\n}","import React, {memo, useEffect, useState} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './reset.css'\nimport './Dark.css'\nimport './App.css'\nimport Filter from \"./Components/Filter/Filter\";\nimport SortFilmsOnGenre from \"./Components/ShowFilms/SortFilms\";\nimport {SearchFilms} from \"./Components/ShowFilms/SearchFilms\";\nimport {FilmsAwaitFilms} from \"./Components/ShowFilms/FilmsAwaitFilms\";\nimport {FilmsTop100} from \"./Components/ShowFilms/FilmsTop100\";\nimport DescriptionFilm from \"./Components/DescriptionFilm/DescriptionFilm\";\nimport {FavouriteFilms} from \"./Components/ShowFilms/FavoutiteFilms\";\nimport {darkThemeSelector} from \"./Redux/selectors\";\nimport {Header} from \"./Components/Header/Header\";\nimport {FilterMob} from \"./Components/Filter/FilterMob\";\nimport {useSelector} from \"react-redux\";\nimport {changeTheme} from \"./Redux/actions\";\n\n\nconst MemoShowOnSearchFilms = memo(SearchFilms);\nconst MemoFilmsTop100 = memo(FilmsTop100)\nconst MemoFilmsAwaitFilms = memo(FilmsAwaitFilms)\nconst MemoFavouriteFilms = memo(FavouriteFilms)\nconst MemoDescriptionFilm = memo(DescriptionFilm)\nconst MemoSortFilmsOnGenre = memo(SortFilmsOnGenre)\n\n\nconst App = () => {\n\n   const [burgerActive, setBurgerActive] = useState(false)\n   const darkTheme = useSelector(darkThemeSelector);\n   const [matchesMedia, setMatchesMedia] = useState(window.matchMedia(\"(min-width: 992px)\").matches);\n\n   useEffect(() => {\n      const handler = e => setMatchesMedia(e.matches);\n      window.matchMedia(\"(min-width: 992px)\").addEventListener('change', handler);\n   }, [matchesMedia])\n\n   console.log(\"Render App\")\n\n   const window768 = window.matchMedia('(max-width: 768px)')\n\n   const media = x => x.matches ?  <FilterMob /> : <Filter />\n\n   return (\n     <Router>\n\n        <Header themeToggler={changeTheme} burgerActive={burgerActive} setBurgerActive={setBurgerActive}/>\n\n        <div className={darkTheme ? \"container dark\" : \"container\"}>\n           { media(window768)}\n             <Switch>\n                <Route exact path={\"/\"} component={MemoFilmsAwaitFilms}/>\n                <Route path={\"/favourite\"} component={MemoFavouriteFilms}/>\n                <Route path={\"/cinemaInfo/:id\"} render={() => <MemoDescriptionFilm/>}/>\n                <Route path=\"/film/:name\" component={MemoShowOnSearchFilms}/>\n                <Route path=\"/films/:ratingFrom/:ratingTo/:yearFrom/:yearTo/:genre/:country/:order\"\n                       component={MemoSortFilmsOnGenre}/>\n                <Route path=\"/top100\" render={() => <MemoFilmsTop100/>}/>\n             </Switch>\n        </div>\n\n     </Router>\n\n   );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"../src/Redux/storeRedux\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {persistor} from \"./Redux/storeRedux\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <HashRouter  >\n        <Provider store={store}>\n            <PersistGate  persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </HashRouter>,\n    document.getElementById(\"root\")\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}