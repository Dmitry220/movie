{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Loader/preloader.module.css","reportWebVitals.js","Redux/typeAction.js","Redux/filmsReduser.js","Redux/headerReducer.js","Redux/favouritesReduser.js","Redux/filterReduser.js","Redux/storeRedux.js","API/API.js","Redux/actions.js","Components/Filter/Filter.js","Components/Loader/Preloader.js","Components/Films/Films.js","Components/Pagination/Pagination.js","Components/ShowFilms/SortFilmsOnGenre.js","Components/ShowFilms/ShowOnSearchFilms.js","Components/Header/Header.js","Components/ShowFilms/FilmsAwaitFilms.js","Components/ShowFilms/FilmsTop100.js","Components/DescriptionFilm/DescriptionFilm.js","Components/ShowFilms/FavoutiteFilms.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHOW_FILMS","SHOW_LOADING","HIDE_LOADING","HANDLER_INPUT","GET_GENRES","SET_FAVOURITE_FILMS","DELETE_FAVOURITE_FILMS","SET_SELECTED_FILM_ID","DELETE_SELECTED_FILM_ID","initialState","pagesCount","films","isLoading","currentPage","selectedMovie","isResponse","searchTest","favouriteFilms","genres","countries","rating","fromYear","toYear","persistConfig","key","storage","whitelist","reducers","combineReducers","state","action","type","payload","header","text","filter","persistReducer","film","filmId","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","instance","axios","baseURL","headers","filmsAPI","get","inputText","filteredParams","id","showLoading","hideLoading","setFilms","getTop100Films","dispatch","response","data","catch","console","log","getAwaitFilms","getFilmsFromSearch","query","getGenreAndCountries","setFilteredParams","status","setSelectedFilmByIdAC","Filter","useDispatch","useSelector","useState","value","setValue","listCountries","setListCountries","selectedGenre","setSelectedGenre","selectedCountry","setSelectedCountry","x","selectedYearFrom","setSelectedYearFrom","selectedYearTo","setSelectedYearTo","selectedRatingFrom","setSelectedRatingFrom","selectedRatingTo","setSelectedRatingTo","order","setOrder","useEffect","filterArray","c","country","toLocaleLowerCase","indexOf","prevState","className","style","filter_block","map","g","cursor","onClick","e","genre","placeholder","onChange","target","length","axis","xmin","xmax","prev","to","join","Preloader","role","Films","f","src","posterUrlPreview","alt","nameRu","some","item","htmlFor","Pagination","onPageChanged","portionSize","pages","i","push","portionCount","Math","ceil","portionNumber","setPortionNumber","leftBorderPagination","rightBorderPagination","p","SortFilmsGenres","MemoPagination","memo","useParams","pageNumber","ShowOnSearchFilms","props","name","Header","history","useHistory","handler","setHandler","submitForm","preventDefault","onSubmit","FilmsAwaitFilms","FilmsTop100","DescriptionFilm","selectedFilm","setSelectedFilmById","posterUrl","slogan","filmLength","year","ratingAgeLimits","description","FavouriteFilms","MemoShowOnSearchFilms","MemoFilmsTop100","MemoFilmsAwaitFilms","MemoFavouriteFilms","MemoDescriptionFilm","MemoSortFilmsOnGenre","SortFilmsOnGenre","App","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,aAAe,6BAA6B,UAAY,0BAA0B,gBAAkB,kC,6DCAtHD,EAAOC,QAAU,CAAC,UAAY,+B,6GCWfC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uBCPDQ,EAAa,aACbC,EAAe,eACfC,EAAe,eACfC,EAAgB,gBAChBC,EAAa,aAEbC,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAA0B,0BCDnCC,EAAe,CACfC,WAAY,KACZC,MAAO,GACPC,WAAW,EACXC,YAAa,EACbC,cAAe,KACfC,YAAY,GCZZN,EAAe,CACfO,WAAY,I,QCAZP,EAAe,CACfQ,eAAgB,I,gBCDdR,EAAe,CACjBS,OAAQ,GACRC,UAAW,GACXC,OAAQ,KACRC,SAAU,KACVC,OAAQ,MCENC,EAAgB,CAClBC,IAAK,OACLC,Q,OAAAA,EACAC,UAAW,CAAC,mBAGZC,EAAWC,YAAgB,CAC3BjB,MJAwB,WAAmC,IAAlCkB,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCAE1D,OAAQA,EAAOC,MACX,KAAK/B,EACD,OAAO,2BACA6B,GADP,IAEIlB,MAAOmB,EAAOE,QAAQrB,MACtBD,WAAYoB,EAAOE,QAAQtB,WAC3BG,YAAaiB,EAAOE,QAAQnB,cAEpC,KAAKZ,EACD,OAAO,2BACA4B,GADP,IAEIjB,WAAY,IAEpB,KAAKV,EACD,OAAO,2BACA2B,GADP,IAEIjB,WAAY,IAEpB,KAAKL,EACD,OAAO,2BACAsB,GADP,IAEIf,cAAegB,EAAOE,UAE9B,KAAKxB,EACD,OAAO,2BACAqB,GADP,IAEIf,cAAe,OAEvB,QACI,OAAOe,II9BfI,OHZyB,WAAmC,IAAlCJ,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCAC3D,OAAQA,EAAOC,OACN5B,EACM,2BACA0B,GADP,IAEIb,WAAYc,EAAOI,OAGhBL,GGKfM,ODRyB,WAAmC,IAAlCN,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCAC3D,OAAQA,EAAOC,OACN3B,EACM,2BACAyB,GADP,IAEIX,OAAQY,EAAOZ,OACfC,UAAWW,EAAOX,YAGfU,GCAfZ,eAAgBmB,YAAeb,GFbH,WAAmC,IAAlCM,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCAE9D,OAAQA,EAAOC,MACX,KAAK1B,EACD,OAAO,2BACAwB,GADP,IAEIZ,eAAe,GAAD,mBAAMY,EAAMZ,gBAAZ,CAA4Ba,EAAOE,YAEzD,KAAK1B,EACD,OAAO,2BACAuB,GADP,IAEIZ,eAAe,YAAKY,EAAMZ,eAAekB,QAAO,SAAAE,GAAI,OAAEA,EAAKC,SAAWR,EAAOE,QAAQM,aAE7F,QACI,OAAOT,QEEbU,EAAQC,YAAYb,EACtBc,YACIC,YACIC,KAEJC,OAAOC,8BAAgCD,OAAOC,iCAGzCC,EAAYC,YAAaR,GACvBA,I,oCC7BTS,E,MAAWC,OAAa,CAC1BC,QAAS,sDACTC,QAAS,CACL,eAAgB,kBAChB,YNIe,0CMAVC,EAAW,WAEW,IAAhBvC,EAAe,uDAAH,EACvB,OAAOmC,EAASK,IAAT,8CAAoDxC,KAHtDuC,EAAW,SAKNvC,GACV,OAAOmC,EAASK,IAAT,wCAA8CxC,KANhDuC,EAAW,SASDE,EAAWzC,GAC1B,OAAOmC,EAASK,IAAT,oCAC0BC,EAD1B,iBAC4CzC,KAX9CuC,EAAW,WAehB,OAAOJ,EAASK,IAAT,YAfFD,EAAW,SAiBDG,EAAgB1C,GAC/B,OAAOmC,EAASK,IAAT,4BAAkCE,EAAlC,iBAAyD1C,KAlB3DuC,EAAW,SAoBPI,GACT,OAAOR,EAASK,IAAT,UAAgBG,KCjBlBC,EAAc,iBAAO,CAAC1B,KAAM9B,IAC5ByD,EAAc,iBAAO,CAAC3B,KAAM7B,IAU5ByD,EAAW,SAAChD,EAAOD,EAAYG,GAApB,MAAqC,CACzDkB,KAAM/B,EACNgC,QAAS,CACLrB,QACAD,aACAG,iBAIK+C,EAAiB,SAAC/C,GAAD,OAAiB,SAACgD,GAC5CA,EAASJ,KACTL,EACoBvC,GACfnB,MAAK,SAACoE,GACHD,EAASF,EAASG,EAASC,KAAKpD,MAAOmD,EAASC,KAAKrD,WAAYG,IACjEgD,EAASH,QAEZM,OAAM,WACHC,QAAQC,IAAI,cAIXC,EAAgB,SAACtD,GAAD,OAAiB,SAACgD,GAC3CA,EAASJ,KACTL,EACmBvC,GACdnB,MAAK,SAACoE,GACHD,EAASF,EAASG,EAASC,KAAKpD,MAAOmD,EAASC,KAAKrD,WAAYG,IACjEgD,EAASH,QAEZM,OAAM,WACHC,QAAQC,IAAI,cAIXE,EAAqB,SAACC,EAAOxD,GAAR,OAAwB,SAACgD,GACvDA,EAASJ,KACTL,EACwBiB,EAAOxD,GAC1BnB,MAAK,SAACoE,GACHD,EAASF,EAASG,EAASC,KAAKpD,MAAOmD,EAASC,KAAKrD,WAAYG,IACjEgD,EAASH,QAEZM,OAAM,WACHC,QAAQC,IAAI,cAIXI,EAAwB,kBAAM,SAACT,GACxCT,IAAkC1D,MAAK,SAACoE,GAvDP,IAAC5C,EAAQC,EAwDtC0C,GAxD8B3C,EAwDC4C,EAASC,KAAK7C,OAxDPC,EAwDe2C,EAASC,KAAK5C,UAxDd,CACzDY,KAAM3B,EACNc,OAAQA,EACRC,UAAWA,UAyDFoD,EAAoB,SAAChB,GAAD,IAAiB1C,EAAjB,uDAA+B,EAA/B,OAAqC,SAACgD,GACnEA,EAASJ,KACTL,EACuBG,EAAgB1C,GAClCnB,MAAK,SAACoE,GACqB,MAApBA,EAASU,SACTX,EAASF,EAASG,EAASC,KAAKpD,MAAOmD,EAASC,KAAKrD,WAAYG,IACjEgD,EAASH,SAGhBM,OAAM,WACHH,EAASF,EAAS,KAClBE,EAASH,UAgBRe,EAAwB,SAACzC,GAAD,MAAc,CAACD,KAAMxB,EAAsByB,Y,kCCsEjE0C,GA3KA,WAEX,IAAMb,EAAWc,cACXzD,EAAS0D,aAAY,SAAC/C,GAAD,OAAWA,EAAMM,OAAOjB,UAC7CC,EAAYyD,aAAY,SAAC/C,GAAD,OAAWA,EAAMM,OAAOhB,aACtD,EAA0B0D,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4CJ,mBAAS,IAArD,mBAAOtB,EAAP,KAAuBgB,EAAvB,KACA,EAA0CM,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAgDR,mBAAS,CAACS,EAAE,OAA5D,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA4CX,mBAAS,CAACS,EAAE,OAAxD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAoDb,mBAAS,CAACS,EAAE,IAAhE,mBAAOK,EAAP,KAA2BC,EAA3B,KACA,EAAgDf,mBAAS,CAACS,EAAE,KAA5D,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAA0BjB,mBAAS,cAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,qBAAU,WACNhB,EAAiB9D,KAClB,CAACA,IAEJ8E,qBAAU,WACNpC,EAASS,OACV,CAACT,IAEJoC,qBAAU,WACN,IAAMC,EAAc/E,EAAUgB,QAAO,SAACgE,GAClC,GAAyE,IAArEA,EAAEC,QAAQC,oBAAoBC,QAAQxB,EAAMuB,qBAA4B,OAAOF,KAEvFlB,EAAiBiB,KAClB,CAACpB,IAEJmB,qBAAU,WAGN,OAFA1B,GAAkB,SAAAgC,GAAS,4BAAQA,GAAR,CAAmBR,EAAOb,EAAeE,EAAzC,oBAAuEG,EAAiBD,GAAxF,kBAAwGG,EAAeH,GAAvH,sBACRK,EAAmBL,GADX,oBAC6BO,EAAiBP,QAClE,WACHf,EAAkB,OAEvB,CAACW,EAAeE,EAAiBG,EAAiBD,EAAGG,EAAeH,EAAGK,EAAmBL,EAAGO,EAAiBP,EAAGS,IAGhH,sBAAKS,UAAU,uBAAf,SACI,uBAAKA,UAAU,iBAAiBhD,GAAG,mBAAnC,UACI,uBAAKgD,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhD,GAAG,aAApC,SACI,yBAAQgD,UAAU,6BAA6BzE,KAAK,SAAS,iBAAe,WACpE,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAD1E,8CAKJ,sBAAKyB,GAAG,cAAcgD,UAAU,8BAA8B,kBAAgB,aACzE,iBAAe,oBADpB,SAEI,qBAAIA,UAAS,qBAAgBC,IAAMC,cAAnC,SACKxF,EAAOyF,KAAI,SAACC,GACT,OACI,qBACIJ,UAAS,0BAAqBtB,IAAgB,UAAH,OAAa0B,EAAEpD,KAAQ,UAClEiD,MAAO,CAACI,OAAQ,WAEhBC,QAAS,SAACC,GAAD,OAAK5B,EAAiB,UAAD,OAAWyB,EAAEpD,MAJ/C,SAMKoD,EAAEI,OAHEJ,EAAEpD,cAU/B,uBAAKgD,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhD,GAAG,aAApC,SACI,yBAAQgD,UAAU,6BAA6BzE,KAAK,SAAS,iBAAe,WACpE,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,cAD1E,oDAKJ,sBAAKyB,GAAG,cAAcgD,UAAU,8BAA8B,kBAAgB,aACzE,iBAAe,oBADpB,SAEI,sBAAIA,UAAS,qBAAgBC,IAAMC,cAAnC,UACI,wBAAO3E,KAAK,OAAO+C,MAAOA,EAAOmC,YAAa,wFACvCC,SAAU,SAACH,GAAD,OAAOhC,EAASgC,EAAEI,OAAOrC,WACxCE,EAAcoC,QAAU,qBAAIZ,UAAU,kBAAd,SAAiC,iGAC1DxB,EAAc2B,KAAI,SAACR,GAChB,OACI,qBACIK,UAAS,0BAAqBpB,IAAkB,YAAH,OAAee,EAAE3C,KAAQ,UAEtEiD,MAAO,CAACI,OAAQ,WAChBC,QAAS,SAACC,GAAD,OAAK1B,EAAmB,YAAD,OAAac,EAAE3C,MAJnD,SAMK2C,EAAEC,SAJED,EAAE3C,eAW/B,uBAAKgD,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhD,GAAG,cAApC,SACI,yBAAQgD,UAAU,6BAA6BzE,KAAK,SAAS,iBAAe,WACpE,iBAAe,gBAAgB,gBAAc,QAAQ,gBAAc,eAD3E,kCAKJ,sBAAKyB,GAAG,eAAegD,UAAU,8BAA8B,kBAAgB,cAC1E,iBAAe,oBADpB,SAEI,uBAAKA,UAAU,iBAAf,UACI,iDAASjB,EAAiBD,KAC1B,+BACI,eAAC,KAAD,CAAQ+B,KAAK,IAAI/B,EAAGC,EAAiBD,EAAGgC,KAAM,KAAMC,KAAM,KAAML,SAAU,gBAAE5B,EAAF,EAAEA,EAAF,OAAOE,GAAoB,SAAAgC,GAAI,kCAAOA,GAAP,IAAalC,cAE1H,iDAASG,EAAeH,KACxB,+BACI,eAAC,KAAD,CAAQ+B,KAAK,IAAI/B,EAAGG,EAAeH,EAAGgC,KAAM/B,EAAiBD,EAAGiC,KAAM,KAAML,SAAU,gBAAE5B,EAAF,EAAEA,EAAF,OAAOI,GAAkB,SAAA8B,GAAI,kCAAOA,GAAP,IAAalC,sBAKhJ,uBAAKkB,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhD,GAAG,cAApC,SACI,yBAAQgD,UAAU,6BAA6BzE,KAAK,SAAS,iBAAe,WACpE,iBAAe,gBAAgB,gBAAc,QAAQ,gBAAc,cAD3E,0DAKJ,sBAAKyB,GAAG,eAAegD,UAAU,8BAA8B,kBAAgB,cAC1E,iBAAe,oBADpB,SAEI,uBAAKA,UAAU,iBAAf,UACI,iDAASb,EAAmBL,KAC5B,+BACI,eAAC,KAAD,CAAQ+B,KAAK,IAAI/B,EAAGK,EAAmBL,EAAGgC,KAAM,EAAGC,KAAM,GAAIL,SAAU,gBAAE5B,EAAF,EAAEA,EAAF,OAAOM,GAAsB,SAAA4B,GAAI,kCAAOA,GAAP,IAAalC,cAEzH,iDAASO,EAAiBP,KAC1B,+BACI,eAAC,KAAD,CAAQ+B,KAAK,IAAI/B,EAAGO,EAAiBP,EAAGgC,KAAM3B,EAAmBL,EAAGiC,KAAM,GAAIL,SAAU,gBAAE5B,EAAF,EAAEA,EAAF,OAAOQ,GAAoB,SAAA0B,GAAI,kCAAOA,GAAP,IAAalC,sBAKpJ,uBAAKkB,UAAU,iBAAf,UACI,qBAAIA,UAAU,mBAAmBhD,GAAG,cAApC,SACI,yBAAQgD,UAAU,6BAA6BzE,KAAK,SAAS,iBAAe,WACpE,iBAAe,eAAe,gBAAc,QAAQ,gBAAc,aAD1E,4EAKJ,sBAAKyB,GAAG,cAAcgD,UAAU,8BAA8B,kBAAgB,aACzE,iBAAe,oBADpB,SAEI,sBAAKA,UAAU,iBAAf,SACI,sBAAIA,UAAW,aAAf,UACI,qBACIA,UAAS,0BAA6B,iBAART,GAA0B,UACxDU,MAAO,CAACI,OAAQ,WAChBC,QAAS,SAACC,GAAD,OAAKf,EAAS,iBAH3B,0JAKA,qBACIQ,UAAS,0BAA6B,eAART,GAAwB,UACtDU,MAAO,CAACI,OAAQ,WAChBC,QAAS,SAACC,GAAD,OAAKf,EAAS,eAH3B,4IAShB,eAAC,IAAD,CAASyB,GAAE,iBAAYlE,EAAemE,KAAK,KAAOlB,UAAW,oFAA7D,kGCtKHmB,I,YAAY,WACrB,OACI,sBAAKnB,UAAU,6BAA6BoB,KAAK,SAAjD,SACI,uBAAMpB,UAAU,kBAAhB,4BCsDGqB,GArDD,SAAC,GAAa,IAAZlH,EAAW,EAAXA,MACZsD,QAAQC,IAAI,gBACZ,IAMML,EAAWc,cACX1D,EAAiB2D,aAAY,SAAC/C,GAAD,OAAWA,EAAMZ,eAAeA,kBAC7DL,EAAYgE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMC,aAChCgE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMI,cAEpD,OACI,sBAAKyF,UAAU,0CAAf,SAEQ5F,EAAY,eAAC,GAAD,IACRD,EAAMyG,OAASzG,EAAMgG,KAAI,SAACmB,GAAD,OACrB,sBAAKtB,UAAU,gBAAf,SACI,uBAAKA,UAAU,OAAf,UACI,eAAC,IAAD,CAASiB,GAAE,sBAAiBK,EAAExF,OAAnB,KAAX,SACI,sBACIyF,IAAKD,EAAEE,iBACPxB,UAAU,eACVyB,IAAI,UAGZ,uBAAKzB,UAAU,YAAf,UACI,oBAAGA,UAAU,YAAb,SAA0BsB,EAAEI,SAC3BjH,EAAekH,MAAK,SAACC,GAAD,OAAQA,EAAK9F,SAAWwF,EAAExF,UAC3C,yBAAQwE,QAAS,kBAAMjD,EH6DZ,CAAC9B,KAAMzB,EAAwB0B,QG7DY8F,KAC9CtB,UAAW,iBADnB,kIAIA,yBAAQM,QAAS,kBAAMjD,EHuDf,CAAC9B,KAAM1B,EAAqB2B,QGvDe8F,KAAKtB,UAAW,kBAAnE,4HAGJ,sBAAKA,UAAU,cAAf,SACI,wBAAO6B,QAAQ,OAAf,SAAqC,SAAbP,EAAE1G,OAAF,UAAyB0G,EAAE1G,QAAU,QAEjE,eAAC,IAAD,CAASqG,GAAE,sBAAiBK,EAAExF,OAAnB,KAAX,0GAtBwBwF,EAAExF,WA4BrC,qBAAIkE,UAAW,+BAAf,2MCjDZ8B,I,MAAa,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,cAAe7H,EAA0C,EAA1CA,WAAYG,EAA8B,EAA9BA,YAAa2H,EAAiB,EAAjBA,YAEhEvE,QAAQC,IAAI,qBACZ,IAAIuE,EAAQ,GACT/H,EAAa,KAAIA,EAAa,IACjC,IAAK,IAAIgI,EAAI,EAAGA,GAAKhI,EAAYgI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeC,KAAKC,KAAKpI,EAAa8H,GAC1C,EAA0C3D,mBAAS,GAAnD,mBAAOkE,EAAP,KAAsBC,EAAtB,KACIC,GAAwBF,EAAgB,GAAKP,EAAa,EAC1DU,EAAwBH,EAAgBP,EAE5C,OAEI,sBAAKhC,UAAU,gBAAf,SACI,sBAAKA,UAAU,oCAAf,SACI,sBAAK,aAAW,MAAhB,SACI,sBAAIA,UAAU,2BAAd,UACKuC,EAAgB,GAAK,yBAAQvC,UAAU,iBAAiBM,QAAS,WAAKkC,EAAiBD,EAAc,IAAhF,kBACrBN,EACItG,QAAO,SAAAgH,GAAC,OAAGA,GAAGF,GAAwBE,GAAID,KAC1CvC,KAAI,SAACwC,GACF,OAAO,qBAAI3C,UAAW3F,IAAgBsI,EAAG,mBAAmB,YAArD,SACH,wBAAM3C,UAAW,YAAaM,QAAS,kBAAMyB,EAAcY,IAA3D,cAAiEA,MADSA,MAIrFP,EAAeG,GAAiB,yBAAQvC,UAAU,iBAAiBM,QAAS,WAAKkC,EAAiBD,EAAc,IAAhF,6BCK1CK,GA9BS,WAEpB,IAAM1I,EAAakE,aAAY,SAAA/C,GAAK,OAAEA,EAAMlB,MAAMD,cAC5CG,EAAc+D,aAAY,SAAA/C,GAAK,OAAEA,EAAMlB,MAAME,eAC7CF,EAAQiE,aAAY,SAAA/C,GAAK,OAAEA,EAAMlB,MAAMA,SACvC0I,EAAiBC,eAAKhB,IACrB/E,EAAkBgG,cAAlBhG,eACDM,EAAWc,cAEjBsB,qBAAU,WACNhC,QAAQC,IAAI,gCACZL,EAASU,EAAkBhB,MAC7B,CAACA,IAMH,OACI,uBAAKiD,UAAU,iBAAf,UACI,eAAC,GAAD,CAAO7F,MAAOA,IACd,eAAC0I,EAAD,CACI3I,WAAYA,EACZG,YAAaA,EACb0H,cAVU,SAACiB,GACnB3F,EAASU,EAAkBhB,EAAgBiG,KAUnChB,YAAa,QCzBhBiB,GAAoB,SAACC,GAE9B,IAAOC,EAAQJ,cAARI,KACDhJ,EAAQiE,aAAY,SAAA/C,GAAK,OAAGA,EAAMlB,MAAMA,SACxCD,EAAakE,aAAY,SAAA/C,GAAK,OAAGA,EAAMlB,MAAMD,cAC7CG,EAAc+D,aAAY,SAAA/C,GAAK,OAAGA,EAAMlB,MAAME,eAC9CG,EAAa4D,aAAY,SAAA/C,GAAK,OAAGA,EAAMI,OAAOjB,cAC9C6C,EAAWc,cAEjBsB,qBAAU,WACNpC,EAASO,EAAmBuF,EAAM,MACpC,CAAC9F,EAAS8F,IAEZ,IAGMN,EAAiBC,eAAKhB,IAE5B,OADArE,QAAQC,IAAI,+BAER,uBAAKsC,UAAU,iBAAf,UACI,eAAC,GAAD,CAAO7F,MAAOA,IACd,eAAC0I,EAAD,CACI3I,WAAYA,EACZG,YAAaA,EACb0H,cAXQ,SAACiB,GACjB3F,EAASO,EAAmBpD,EAAYwI,KAWhChB,YAAa,QCzBhBoB,GAAS,WAClB3F,QAAQC,IAAI,iBACZ,IAAI2F,EAAUC,cACd,EAA8BjF,mBAAS,IAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KAEMnG,GADYe,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMC,aAClC+D,eAEXsF,EAAa,SAAClD,EAAGjC,GACnBiC,EAAEmD,iBACFrG,EPE+B,CAAC9B,KAAM5B,EAAe+B,KOF/B4C,IACtB+E,EAAQlB,KAAR,gBAAsB7D,KAG1B,OACI,+BACI,sBAAK0B,UAAU,6BAAf,SACI,uBAAKA,UAAU,gDAAf,UACI,qBAAIA,UAAU,yBAAd,SACI,qBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CAASiB,GAAG,UAAUjB,UAAU,kBAAhC,mFAGR,wBACIA,UAAU,aACV2D,SAAU,SAACpD,GACPkD,EAAWlD,EAAGgD,IAHtB,UAMI,wBACIvD,UAAU,oBACVzE,KAAK,SACLkF,YAAY,oIACZnC,MAAOiF,EACP7C,SAAU,SAACH,GACPiD,EAAWjD,EAAEI,OAAOrC,UAG5B,yBACI0B,UAAU,0BACVzE,KAAK,SACL+E,QAAS,SAACC,GAAD,OAAOkD,EAAWlD,EAAGgD,IAHlC,+CAQJ,eAAC,IAAD,CAAStC,GAAG,aAAajB,UAAU,kBAAnC,wHC9CP4D,GAAkB,WAC3BnG,QAAQC,IAAI,qBAEZ,IAAMmF,EAAiBC,eAAKhB,IACtB5H,EAAakE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMD,cAC9CG,EAAc+D,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAME,eAC/CF,EAAQiE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMA,SACzCkD,EAAWc,cAEjBsB,qBAAU,WACNpC,EAASM,EAActD,MACxB,CAACgD,EAAUhD,IAMd,OACI,uBAAK2F,UAAU,gBAAf,UACI,eAAC,GAAD,CAAO7F,MAAOA,IACd,eAAC0I,EAAD,CACI3I,WAAYA,EACZG,YAAaA,EACb0H,cAVU,SAACiB,GACnBrF,EAAcqF,IAUNhB,YAAa,QCvBhB6B,GAAc,WACvBpG,QAAQC,IAAI,kBACZ,IAAMrD,EAAc+D,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAME,eAC/CH,EAAakE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMD,cAC9CC,EAAQiE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMA,SAEzCkD,EAAWc,cAEjBsB,qBAAU,WACNpC,EAASD,EAAe/C,MAC1B,CAACA,IAEH,IAGMwI,EAAiBC,eAAKhB,IAC5B,OACQ,uBAAK9B,UAAU,iBAAf,UACQ,eAAC,GAAD,CAAO7F,MAAOA,IACd,eAAC0I,EAAD,CACA3I,WAAYA,EACZG,YAAaA,EACb0H,cAVM,SAACiB,GACnB3F,EAASD,EAAe4F,KAUZhB,YAAa,IANrB,QC+BG8B,I,MAhDS,WACpB,IAAO9G,EAAM+F,cAAN/F,GACDK,EAAWc,cACX4F,EAAe3F,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMG,iBAChDF,EAAYgE,aAAY,SAAA/C,GAAK,OAAIA,EAAMlB,MAAMC,aAUnD,OAPAqF,qBAAU,WAEN,OADApC,EVqF2B,SAACL,GAAD,OAAQ,SAACK,GACxCA,EAASJ,KACTL,EAAsBI,GAAI9D,MAAK,SAACoE,GAC5BD,EAASY,EAAsBX,EAASC,KAAKA,OAC7CF,EAASH,SUzFA8G,CAAoBhH,IACtB,WACHK,EV6FiC,CAAC9B,KAAMvB,OU3F7C,CAACgD,IAGA,sBAAKgD,UAAU,YAAf,SAEQ5F,EAAY,eAAC,GAAD,IAAe2J,GAAgB,iCACvC,uBAAK/D,UAAU,yBAAf,UACI,sBAAKA,UAAU,qBAAf,SACI,sBAAKA,UAAU,cAAf,SACI,sBAAKuB,IAAKwC,EAAaE,UAAWjE,UAAU,iBAAiByB,IAAI,SAIzE,uBAAKzB,UAAU,oBAAf,UACI,qBAAGA,UAAU,eAAb,UAA4B,yFAA4B+D,EAAarC,UACrE,qBAAG1B,UAAU,eAAb,UAA4B,gJACD+D,EAAaG,QAAU,mEAClD,qBAAGlE,UAAU,eAAb,UAA4B,+IAAqC+D,EAAaI,cAE9E,qBAAGnE,UAAU,eAAb,UAA4B,6EAA0B+D,EAAapJ,UAAUwF,KAAI,SAAAR,GAAC,OAC9E,kCAAOA,EAAEC,QAAT,aACJ,qBAAGI,UAAU,eAAb,UAA4B,2DAAuB+D,EAAaK,QAChE,qBAAGpE,UAAU,eAAb,UAA4B,iEAAwB+D,EAAarJ,OAAOyF,KAAI,SAAAC,GAAC,OACzE,kCAAOA,EAAEI,MAAT,aACJ,qBAAGR,UAAU,eAAb,UAA4B,wKACD+D,EAAaM,gBADxC,aAKR,oBAAGrE,UAAU,kBAAb,SAAgC+D,EAAaO,qBC3CpDC,GAAiB,WAC1B,IAAM9J,EAAiB2D,aAAY,SAAA/C,GAAK,OAAIA,EAAMZ,eAAeA,kBAChD0D,cAMjB,OACI,sBAAK6B,UAAU,iBAAf,SAEI,eAAC,GAAD,CAAO7F,MAAOM,OCLpB+J,GAAwB1B,eAAKG,IAC7BwB,GAAkB3B,eAAKe,IACvBa,GAAqB5B,eAAKc,IAC1Be,GAAqB7B,eAAKyB,IAC1BK,GAAsB9B,eAAKgB,IAC3Be,GAAuB/B,eAAKgC,IA4BnBC,GA1BH,WAEV,OADAtH,QAAQC,IAAI,cAER,eAAC,IAAD,UACE,uBAAKsC,UAAU,MAAf,UACE,eAAC,GAAD,IACA,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,SACE,eAAC,GAAD,MAEF,sBAAKA,UAAU,QAAf,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOgF,OAAK,EAACC,KAAM,IAAKC,UAAWR,KACnC,eAAC,IAAD,CAAOO,KAAM,aAAcC,UAAWP,KACtC,eAAC,IAAD,CAAOM,KAAM,kBAAmBE,OAAQ,kBAAM,eAACP,GAAD,OAC9C,eAAC,IAAD,CAAOK,KAAK,cAAcC,UAAWV,KACrC,eAAC,IAAD,CAAOS,KAAK,yBAAyBC,UAAWL,KAChD,eAAC,IAAD,CAAOI,KAAK,UAAUE,OAAQ,kBAAM,eAACV,GAAD,qBCvBpDW,IAASD,OACL,eAAC,IAAD,UACI,eAAC,IAAD,CAAUpJ,MAAOA,EAAjB,SACI,eAAC,IAAD,CAAcO,UAAWA,EAAzB,SACI,eAAC,GAAD,UAIZ+I,SAASC,eAAe,SAO5BvM,M","file":"static/js/main.2c12121e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_block\":\"Filter_filter_block__3kjbO\",\"listGroup\":\"Filter_listGroup__gtJto\",\"accordionButton\":\"Filter_accordionButton__1yZ1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2se3H\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SHOW_FILMS = \"SHOW_FILMS\";\r\nexport const SHOW_LOADING = 'SHOW_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';\r\nexport const HANDLER_INPUT = 'HANDLER_INPUT'\r\nexport const GET_GENRES = 'GET_GENRES'\r\nexport const SET_SELECTED_FILTER = 'SET_SELECTED_FILTER'\r\nexport const SET_FAVOURITE_FILMS = 'SET_FAVOURITE_FILMS'\r\nexport const DELETE_FAVOURITE_FILMS = 'DELETE_FAVOURITE_FILMS'\r\nexport const SET_SELECTED_FILM_ID = 'SET_SELECTED_FILM_ID'\r\nexport const DELETE_SELECTED_FILM_ID = 'DELETE_SELECTED_FILM_ID'\r\nexport const GET_VIDEO = 'GET_VIDEO'\r\nexport const API_KEY = \"303097b4-2b0a-46a5-8aae-4a1137273ff1\";\r\n\r\n","import {\r\n    SHOW_LOADING,\r\n    HIDE_LOADING,\r\n    SHOW_FILMS,\r\n    SET_SELECTED_FILM_ID,\r\n    DELETE_SELECTED_FILM_ID,\r\n} from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    pagesCount: null,\r\n    films: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    selectedMovie: null,\r\n    isResponse: false\r\n}\r\n\r\nexport const filmsReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SHOW_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.payload.films,\r\n                pagesCount: action.payload.pagesCount,\r\n                currentPage: action.payload.currentPage,\r\n            }\r\n        case SHOW_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading : true\r\n            }\r\n        case HIDE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading : false\r\n            }\r\n        case SET_SELECTED_FILM_ID:\r\n            return {\r\n                ...state,\r\n                selectedMovie: action.payload\r\n            }\r\n        case DELETE_SELECTED_FILM_ID:\r\n            return {\r\n                ...state,\r\n                selectedMovie: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { HANDLER_INPUT } from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    searchTest: \"\",\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HANDLER_INPUT:\r\n            return {\r\n                ...state,\r\n                searchTest: action.text,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {DELETE_FAVOURITE_FILMS, SET_FAVOURITE_FILMS} from \"./typeAction\";\r\n\r\n\r\nlet initialState = {\r\n    favouriteFilms: [],\r\n}\r\n\r\nexport const favouriteReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms, action.payload],\r\n            }\r\n        case DELETE_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms.filter(film=>film.filmId !== action.payload.filmId)],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_GENRES} from \"./typeAction\";\r\n\r\n\r\nconst initialState = {\r\n    genres: [],\r\n    countries: [],\r\n    rating: null,\r\n    fromYear: null,\r\n    toYear: null,\r\n}\r\n\r\nexport const filterReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.genres,\r\n                countries: action.countries\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { filmsReduser } from \"./filmsReduser\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {favouriteReduser} from \"./favouritesReduser\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {filterReduser} from \"./filterReduser\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['favouriteFilms']\r\n};\r\n\r\nlet reducers = combineReducers({\r\n    films : filmsReduser,\r\n    header: headerReducer,\r\n    filter: filterReduser,\r\n    favouriteFilms: persistReducer(persistConfig, favouriteReduser),\r\n})\r\n\r\nconst store = createStore(reducers,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import * as axios from \"axios\";\r\nimport { API_KEY } from \"../Redux/typeAction\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://kinopoiskapiunofficial.tech/api/v2.1/films/\",\r\n    headers: {\r\n        \"Content-Type\": \"aplication/json\",\r\n        \"X-API-KEY\": API_KEY,\r\n    },\r\n});\r\n\r\nexport const filmsAPI = {\r\n\r\n    getFilmsTOP100(currentPage=1) {\r\n        return instance.get(`top?type=TOP_100_POPULAR_FILMS&page=${currentPage}`);\r\n    },\r\n    getAwaitFilms(currentPage) {\r\n        return instance.get(`top?type=TOP_AWAIT_FILMS&page=${currentPage}`);\r\n\r\n    },\r\n    getFilmsFromSearch(inputText, currentPage) {\r\n        return instance.get(\r\n            `search-by-keyword?keyword=${inputText}&page=${currentPage}`\r\n        );\r\n    },\r\n    getListGenreAndCountry (){\r\n        return instance.get(`filters`);\r\n    },\r\n    getFilteredParams (filteredParams, currentPage){\r\n        return instance.get(`search-by-filters?${filteredParams}&page=${currentPage}`)\r\n    },\r\n    getFilmsById(id){\r\n        return instance.get(`${id}`)\r\n    }\r\n};\r\n","import {filmsAPI} from \"../API/API\";\r\nimport {\r\n    SHOW_FILMS,\r\n    GET_GENRES,\r\n    HANDLER_INPUT,\r\n    HIDE_LOADING,\r\n    SHOW_LOADING,\r\n    SET_FAVOURITE_FILMS,\r\n    DELETE_FAVOURITE_FILMS,\r\n    SET_SELECTED_FILM_ID,\r\n    GET_VIDEO,\r\n    DELETE_SELECTED_FILM_ID,\r\n} from \"./typeAction\";\r\n\r\n\r\nexport const showLoading = () => ({type: SHOW_LOADING});\r\nexport const hideLoading = () => ({type: HIDE_LOADING});\r\n\r\nexport const handlerInput = (text) => ({type: HANDLER_INPUT, text});\r\n\r\nexport const setGenresAndCountries = (genres, countries) => ({\r\n    type: GET_GENRES,\r\n    genres: genres,\r\n    countries: countries\r\n});\r\n\r\nexport const setFilms = (films, pagesCount, currentPage) => ({\r\n    type: SHOW_FILMS,\r\n    payload: {\r\n        films,\r\n        pagesCount,\r\n        currentPage\r\n    }\r\n})\r\n\r\nexport const getTop100Films = (currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getFilmsTOP100(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getAwaitFilms = (currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getAwaitFilms(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getFilmsFromSearch = (query, currentPage) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getFilmsFromSearch(query, currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n            dispatch(hideLoading())\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getGenreAndCountries  = () => (dispatch) => {\r\n    filmsAPI.getListGenreAndCountry().then((response) => {\r\n        dispatch(setGenresAndCountries(response.data.genres, response.data.countries));\r\n    });\r\n};\r\n\r\nexport const setFilteredParams = (filteredParams, currentPage = 1) => (dispatch) => {\r\n    dispatch(showLoading())\r\n    filmsAPI\r\n        .getFilteredParams(filteredParams, currentPage)\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n                dispatch(hideLoading())\r\n            }\r\n        })\r\n        .catch(() => {\r\n            dispatch(setFilms([]))\r\n            dispatch(hideLoading())\r\n    });\r\n};\r\n\r\nexport const setFavouritesFilms = (payload) => ({type: SET_FAVOURITE_FILMS, payload})\r\n\r\nexport const deleteFavouritesFilms = (payload) => ({type: DELETE_FAVOURITE_FILMS, payload})\r\n\r\nexport const setSelectedFilmById = (id) => (dispatch)=> {\r\n    dispatch(showLoading())\r\n    filmsAPI.getFilmsById(id).then((response) => {\r\n        dispatch(setSelectedFilmByIdAC(response.data.data));\r\n        dispatch(hideLoading())\r\n    });\r\n}\r\n\r\nexport const setSelectedFilmByIdAC = (payload) => ({type: SET_SELECTED_FILM_ID, payload})\r\n\r\nexport const deleteSelectedFilmById = () => ({type: DELETE_SELECTED_FILM_ID})\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getGenreAndCountries} from \"../../Redux/actions\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Filter.module.css'\r\nimport Slider from 'react-input-slider';\r\n\r\nconst Filter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const genres = useSelector((state) => state.filter.genres);\r\n    const countries = useSelector((state) => state.filter.countries);\r\n    const [value, setValue] = useState('');\r\n    const [listCountries, setListCountries] = useState([]);\r\n    const [filteredParams, setFilteredParams] = useState([]);\r\n    const [selectedGenre, setSelectedGenre] = useState('')\r\n    const [selectedCountry, setSelectedCountry] = useState('')\r\n    const [selectedYearFrom, setSelectedYearFrom] = useState({x:1880})\r\n    const [selectedYearTo, setSelectedYearTo] = useState({x:2021})\r\n    const [selectedRatingFrom, setSelectedRatingFrom] = useState({x:0})\r\n    const [selectedRatingTo, setSelectedRatingTo] = useState({x:10})\r\n    const [order, setOrder] = useState('order=YEAR')\r\n\r\n    useEffect(() => {\r\n        setListCountries(countries);\r\n    }, [countries])\r\n\r\n    useEffect(() => {\r\n        dispatch(getGenreAndCountries());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const filterArray = countries.filter((c) => {\r\n            if (c.country.toLocaleLowerCase().indexOf(value.toLocaleLowerCase()) === 0) return c\r\n        })\r\n        setListCountries(filterArray);\r\n    }, [value])\r\n\r\n    useEffect(()=>{\r\n        setFilteredParams(prevState => [...prevState, order, selectedGenre, selectedCountry, `&yearFrom=${selectedYearFrom.x}`, `&yearTo=${selectedYearTo.x}`,\r\n            `&ratingFrom=${selectedRatingFrom.x}`, `&ratingTo=${selectedRatingTo.x}` ]);\r\n        return ()=>{\r\n            setFilteredParams([]);\r\n        }\r\n    }, [selectedGenre, selectedCountry, selectedYearFrom.x, selectedYearTo.x, selectedRatingFrom.x, selectedRatingTo.x, order])\r\n\r\n    return (\r\n        <div className=\"container-fluid pt-5\">\r\n            <div className=\"accordion dark\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                            Жанры\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <ul className={`list-group ${style.filter_block}`}>\r\n                            {genres.map((g) => {\r\n                                return (\r\n                                    <li\r\n                                        className={`list-group-item ${selectedGenre===`&genre=${g.id}` && 'active'}`}\r\n                                        style={{cursor: 'pointer'}}\r\n                                        key={g.id}\r\n                                        onClick={(e)=>setSelectedGenre(`&genre=${g.id}`)}\r\n                                    >\r\n                                        {g.genre}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Страны\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <ul className={`list-group ${style.filter_block}`}>\r\n                            <input type=\"text\" value={value} placeholder={'Название страны'}\r\n                                   onChange={(e) => setValue(e.target.value)}/>\r\n                            {!listCountries.length && <li className=\"list-group-item\">{\"Ничего не найдено\"}</li>}\r\n                            {listCountries.map((c) => {\r\n                                return (\r\n                                    <li\r\n                                        className={`list-group-item ${selectedCountry===`&country=${c.id}` && 'active'}`}\r\n                                        key={c.id}\r\n                                        style={{cursor: 'pointer'}}\r\n                                        onClick={(e)=>setSelectedCountry(`&country=${c.id}`)}\r\n                                    >\r\n                                        {c.country}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                            Год\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFour\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <div>От {selectedYearFrom.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedYearFrom.x} xmin={1880} xmax={2021} onChange={({x})=>setSelectedYearFrom(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                            <div>До {selectedYearTo.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedYearTo.x} xmin={selectedYearFrom.x} xmax={2021} onChange={({x})=>setSelectedYearTo(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"headingFive\">\r\n                            Рейтинг\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFive\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <div>От {selectedRatingFrom.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedRatingFrom.x} xmin={0} xmax={10} onChange={({x})=>setSelectedRatingFrom(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                            <div>До {selectedRatingTo.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedRatingTo.x} xmin={selectedRatingFrom.x} xmax={10} onChange={({x})=>setSelectedRatingTo(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseSix\" aria-expanded=\"false\" aria-controls=\"headingSix\">\r\n                            Сортировка\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseSix\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingSix\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <ul className={'list-group'}>\r\n                                <li\r\n                                    className={`list-group-item ${order==='order=RATING' && 'active'}`}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    onClick={(e)=>setOrder(`order=RATING`)}\r\n                                >Отсортировать по рейтингу</li>\r\n                                <li\r\n                                    className={`list-group-item ${order==='order=YEAR' && 'active'}`}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    onClick={(e)=>setOrder(`order=YEAR`)}\r\n                                >Отсортировать по году</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <NavLink to={`/films/${filteredParams.join('')}`} className={'btn btn-outline-primary p-2 justify-content-center d-flex text-white border-white'}>\r\n                    Отфильтровать\r\n                </NavLink>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from './preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className=\"spinner-border text-danger\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport './films.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteFavouritesFilms, setFavouritesFilms, setSelectedFilm} from \"../../Redux/actions\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\n\r\nconst Films = ({films}) => {\r\n    console.log('Render Films')\r\n    const selectRating = (raiting) => {\r\n        if (raiting >= 9) return \"green\";\r\n        else if (raiting >= 7) return \"yellow\"\r\n        else if (raiting >= 5) return \"orange\";\r\n        else return \"red\";\r\n    }\r\n    const dispatch = useDispatch();\r\n    const favouriteFilms = useSelector((state) => state.favouriteFilms.favouriteFilms)\r\n    const isLoading = useSelector(state => state.films.isLoading)\r\n    const isResponse = useSelector(state => state.films.isResponse)\r\n\r\n    return (\r\n        <div className=\"row row-cols-1 row-cols-lg-5 g-2 g-lg-3\">\r\n            {\r\n                isLoading ? <Preloader /> :\r\n                    films.length ? films.map((f) => (\r\n                        <div className=\"col cardFilms\" key={f.filmId}>\r\n                            <div className=\"card\">\r\n                                <NavLink to={`/cinemaInfo/${f.filmId}/`}>\r\n                                    <img\r\n                                        src={f.posterUrlPreview}\r\n                                        className=\"card-img-top\"\r\n                                        alt=\"...\"\r\n                                    />\r\n                                </NavLink>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">{f.nameRu}</p>\r\n                                    {favouriteFilms.some((item)=>item.filmId === f.filmId) ?\r\n                                        <button onClick={() => dispatch(deleteFavouritesFilms(f))}\r\n                                                className={'btn btn-danger'}>\r\n                                            Удалить из избранного\r\n                                        </button> :\r\n                                        <button onClick={() => dispatch(setFavouritesFilms(f))} className={'btn btn-success'}>\r\n                                            Добавить в избранное\r\n                                        </button>}\r\n                                    <div className=\"rating-area\">\r\n                                        <label htmlFor=\"star\" >{f.rating !== 'null' ? `${f.rating}`: '0'}</label>\r\n                                    </div>\r\n                                    <NavLink to={`/cinemaInfo/${f.filmId}/`}>\r\n                                        Смотреть онлайн\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )) : <h2 className={'text-white w-100 fontSize-24'}>По вашему запросу ничего не найдено!</h2>\r\n\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Films\r\n","\r\nimport React, { useState } from \"react\";\r\nimport \"./../../App.css\"\r\n\r\nexport const Pagination = ({onPageChanged, pagesCount, currentPage, portionSize}) => {\r\n\r\n    console.log(\"Render Pagination\");\r\n    let pages = [];\r\n    if(pagesCount > 20) pagesCount = 20\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    let leftBorderPagination = (portionNumber - 1) * portionSize +1;\r\n    let rightBorderPagination = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className=\"row pt-5 pb-5\">\r\n            <div className=\"col justify-content-center d-flex\">\r\n                <nav aria-label=\"...\">\r\n                    <ul className=\"pagination pagination-lg\">\r\n                        {portionNumber > 1 && <button className=\"btn btn-danger\" onClick={()=>{setPortionNumber(portionNumber-1)}}>&laquo;</button>}\r\n                        {pages\r\n                            .filter(p=> p>=leftBorderPagination && p <=rightBorderPagination)\r\n                            .map((p) => {\r\n                                return <li className={currentPage === p ?'page-item active':'page-item'} key={p}>\r\n                                    <span className={'page-link'} onClick={() => onPageChanged(p)}> {p}</span>\r\n                                </li>\r\n                            })}\r\n                        {portionCount > portionNumber && <button className=\"btn btn-danger\" onClick={()=>{setPortionNumber(portionNumber+1)}}>&raquo;</button>}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setFilteredParams} from \"../../Redux/actions\";\r\n\r\nconst SortFilmsGenres = () => {\r\n\r\n    const pagesCount = useSelector(state=>state.films.pagesCount);\r\n    const currentPage = useSelector(state=>state.films.currentPage);\r\n    const films = useSelector(state=>state.films.films);\r\n    const MemoPagination = memo(Pagination);\r\n    const {filteredParams} = useParams();\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Screening of films by genre \")\r\n        dispatch(setFilteredParams(filteredParams))\r\n    },[filteredParams])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        dispatch(setFilteredParams(filteredParams, pageNumber));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container pt-5\">\r\n            <Films films={films} />\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default SortFilmsGenres;\r\n","import Films from \"../Films/Films\";\r\nimport {getFilmsFromSearch} from \"../../Redux/actions\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {memo, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const ShowOnSearchFilms = (props) => {\r\n\r\n    const {name} = useParams();\r\n    const films = useSelector(state=> state.films.films)\r\n    const pagesCount = useSelector(state=> state.films.pagesCount)\r\n    const currentPage = useSelector(state=> state.films.currentPage)\r\n    const searchTest = useSelector(state=> state.header.searchTest);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getFilmsFromSearch(name, 1));\r\n    },[dispatch,name])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        dispatch(getFilmsFromSearch(searchTest, pageNumber));\r\n    };\r\n    const MemoPagination = memo(Pagination);\r\n    console.log('Render Show Films By Search');\r\n    return (\r\n        <div className=\"container pt-5\">\r\n            <Films films={films} />\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from \"react-router\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {handlerInput} from \"../../Redux/actions\";\r\nimport {Loader} from \"../Loader/Loader\";\r\n\r\nexport const Header = () => {\r\n    console.log('Render Header')\r\n    let history = useHistory();\r\n    const [handler, setHandler] = useState('');\r\n    const isLoading = useSelector(state => state.films.isLoading)\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = (e, value) => {\r\n        e.preventDefault();\r\n        dispatch(handlerInput(value));\r\n        history.push(`/film/${value}`)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container-fluid d-flex justify-content-center\">\r\n                    <ul className=\"nav nav-pills nav-fill\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/top100\" className=\"btn btn-primary\">Топ 100 фильмов</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <form\r\n                        className=\"d-flex p-3\"\r\n                        onSubmit={(e) => {\r\n                            submitForm(e, handler);\r\n                        }}\r\n                    >\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Введите название фильма!\"\r\n                            value={handler}\r\n                            onChange={(e) => {\r\n                                setHandler(e.target.value);\r\n                            }}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-success\"\r\n                            type=\"button\"\r\n                            onClick={(e) => submitForm(e, handler)}\r\n                        >\r\n                            Поиск\r\n                        </button>\r\n                    </form>\r\n                    <NavLink to=\"/favourite\" className=\"btn btn-primary\">Мои любимые фильмы</NavLink>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAwaitFilms} from \"../../Redux/actions\";\r\n\r\nexport const FilmsAwaitFilms = () => {\r\n    console.log('Render start page')\r\n\r\n    const MemoPagination = memo(Pagination);\r\n    const pagesCount = useSelector(state => state.films.pagesCount);\r\n    const currentPage = useSelector(state => state.films.currentPage);\r\n    const films = useSelector(state => state.films.films);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAwaitFilms(currentPage));\r\n    }, [dispatch, currentPage])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        getAwaitFilms(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <Films films={films}/>\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {getTop100Films} from \"../../Redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\n\r\nexport const FilmsTop100 = () => {\r\n    console.log('Render Top 100')\r\n    const currentPage = useSelector(state => state.films.currentPage)\r\n    const pagesCount = useSelector(state => state.films.pagesCount)\r\n    const films = useSelector(state => state.films.films)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getTop100Films(currentPage))\r\n    },[currentPage])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        dispatch(getTop100Films(pageNumber))\r\n    };\r\n    const MemoPagination = memo(Pagination);\r\n    return (\r\n            <div className=\"container pt-5\">\r\n                    <Films films={films}/>\r\n                    <MemoPagination\r\n                    pagesCount={pagesCount}\r\n                    currentPage={currentPage}\r\n                    onPageChanged={onPageChanged}\r\n                    portionSize={5}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n    );\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport './descriptionFilm.css'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteSelectedFilmById, setSelectedFilmById} from \"../../Redux/actions\";\r\nimport {Preloader} from \"../Loader/Preloader\";\r\n\r\nconst DescriptionFilm = () => {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const selectedFilm = useSelector(state => state.films.selectedMovie);\r\n    const isLoading = useSelector(state => state.films.isLoading)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedFilmById(id))\r\n        return ()=>{\r\n            dispatch(deleteSelectedFilmById())\r\n        }\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"movie_top\">\r\n            {\r\n                isLoading ? <Preloader/> : selectedFilm && <div>\r\n                    <div className=\"col-md-9 movie_box m-4\">\r\n                        <div className=\"grid images_3_of_2\">\r\n                            <div className=\"movie_image\">\r\n                                <img src={selectedFilm.posterUrl} className=\"img-responsive\" alt=\"\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"desc1 span_3_of_2\">\r\n                            <p className=\"movie_option\"><strong>Название: </strong>{selectedFilm.nameRu}</p>\r\n                            <p className=\"movie_option\"><strong>Слоган\r\n                                ограничения: </strong>{selectedFilm.slogan || 'Без слогана'}</p>\r\n                            <p className=\"movie_option\"><strong>Продолжительность: </strong>{selectedFilm.filmLength}\r\n                            </p>\r\n                            <p className=\"movie_option\"><strong>Страна: </strong>{selectedFilm.countries.map(c =>\r\n                                <span>{c.country} </span>)}</p>\r\n                            <p className=\"movie_option\"><strong>Год: </strong>{selectedFilm.year}</p>\r\n                            <p className=\"movie_option\"><strong>Жанр: </strong>{selectedFilm.genres.map(g =>\r\n                                <span>{g.genre} </span>)}</p>\r\n                            <p className=\"movie_option\"><strong>Возратсные\r\n                                ограничения: </strong>{selectedFilm.ratingAgeLimits}+</p>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"m_4 description\">{selectedFilm.description}</p>\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default DescriptionFilm\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const FavouriteFilms = () => {\r\n    const favouriteFilms = useSelector(state => state.favouriteFilms.favouriteFilms)\r\n    const dispatch = useDispatch();\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        //dispatch(getTop100Films(pageNumber))\r\n    };\r\n    const MemoPagination = memo(Pagination);\r\n    return (\r\n        <div className=\"container pt-5\">\r\n\r\n            <Films films={favouriteFilms} />\r\n            {/*<MemoPagination*/}\r\n            {/*    pagesCount={pagesCount}*/}\r\n            {/*    currentPage={currentPage}*/}\r\n            {/*    onPageChanged={onPageChanged}*/}\r\n            {/*    portionSize={5}*/}\r\n            {/*/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {memo} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Filter from \"./Components/Filter/Filter\";\nimport SortFilmsOnGenre from \"./Components/ShowFilms/SortFilmsOnGenre\";\nimport {ShowOnSearchFilms} from \"./Components/ShowFilms/ShowOnSearchFilms\";\nimport {Header} from \"./Components/Header/Header\";\nimport {FilmsAwaitFilms} from \"./Components/ShowFilms/FilmsAwaitFilms\";\nimport {FilmsTop100} from \"./Components/ShowFilms/FilmsTop100\";\nimport DescriptionFilm from \"./Components/DescriptionFilm/DescriptionFilm\";\nimport {FavouriteFilms} from \"./Components/ShowFilms/FavoutiteFilms\";\n\nconst MemoShowOnSearchFilms = memo(ShowOnSearchFilms);\nconst MemoFilmsTop100 = memo(FilmsTop100)\nconst MemoFilmsAwaitFilms= memo(FilmsAwaitFilms)\nconst MemoFavouriteFilms = memo(FavouriteFilms)\nconst MemoDescriptionFilm = memo(DescriptionFilm)\nconst MemoSortFilmsOnGenre = memo(SortFilmsOnGenre)\n\nconst App = () => {\n  console.log(\"Render App\")\n  return (\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <Filter/>\n            </div>\n            <div className=\"col-9\">\n              <Switch>\n                <Route exact path={\"/\"} component={MemoFilmsAwaitFilms}/>\n                <Route path={\"/favourite\"} component={MemoFavouriteFilms}/>\n                <Route path={\"/cinemaInfo/:id\"} render={() => <MemoDescriptionFilm/>}/>\n                <Route path=\"/film/:name\" component={MemoShowOnSearchFilms}/>\n                <Route path=\"/films/:filteredParams\" component={MemoSortFilmsOnGenre}/>\n                <Route path=\"/top100\" render={() => <MemoFilmsTop100/>}/>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"../src/Redux/storeRedux\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {persistor} from \"./Redux/storeRedux\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <HashRouter  >\n        <Provider store={store}>\n            <PersistGate  persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </HashRouter>,\n    document.getElementById(\"root\")\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}