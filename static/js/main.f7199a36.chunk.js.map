{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Loader/preloader.module.css","reportWebVitals.js","Redux/typeAction.js","Redux/filmsReduser.js","Redux/headerReducer.js","Redux/favouritesReduser.js","Redux/filterReduser.js","Redux/storeRedux.js","API/API.js","Redux/actions.js","Components/Filter/Filter.js","Components/Films/Films.js","Components/Loader/Preloader.js","Components/Pagination/Pagination.js","Components/ShowFilms/SortFilmsOnGenre.js","Components/ShowFilms/ShowOnSearchFilms.js","Components/Loader/Loader.js","Components/Header/Header.js","Components/ShowFilms/FilmsAwaitFilms.js","Components/ShowFilms/FilmsTop100.js","Components/DescriptionFilm/DescriptionFilm.js","Components/ShowFilms/FavoutiteFilms.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHOW_FILMS","SHOW_LOADING","HIDE_LOADING","HANDLER_INPUT","GET_GENRES","SET_FAVOURITE_FILMS","DELETE_FAVOURITE_FILMS","SET_SELECTED_FILM_ID","DELETE_SELECTED_FILM_ID","initialState","pagesCount","films","isLoading","currentPage","selectedMovie","searchTest","favouriteFilms","genres","countries","rating","fromYear","toYear","persistConfig","key","storage","whitelist","reducers","combineReducers","state","action","type","payload","header","text","filter","persistReducer","film","filmId","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","instance","axios","baseURL","headers","filmsAPI","get","inputText","filteredParams","id","setFilms","getTop100Films","dispatch","response","data","catch","console","log","getAwaitFilms","getFilmsFromSearch","query","getGenreAndCountries","setFilteredParams","setSelectedFilmByIdAC","Filter","useDispatch","useSelector","useState","value","setValue","listCountries","setListCountries","selectedGenre","setSelectedGenre","selectedCountry","setSelectedCountry","x","selectedYearFrom","setSelectedYearFrom","selectedYearTo","setSelectedYearTo","selectedRatingFrom","setSelectedRatingFrom","selectedRatingTo","setSelectedRatingTo","order","setOrder","useEffect","filterArray","c","country","toLocaleLowerCase","indexOf","prevState","className","style","filter_block","map","g","cursor","onClick","e","genre","placeholder","onChange","target","length","axis","xmin","xmax","prev","to","join","Films","f","src","posterUrlPreview","alt","nameRu","some","item","htmlFor","Preloader","styles","preloader","Pagination","onPageChanged","portionSize","pages","i","push","portionCount","Math","ceil","portionNumber","setPortionNumber","leftBorderPagination","rightBorderPagination","p","SortFilmsGenres","MemoPagination","memo","useParams","pageNumber","ShowOnSearchFilms","props","name","Loader","role","Header","history","useHistory","handler","setHandler","submitForm","preventDefault","onSubmit","FilmsAwaitFilms","FilmsTop100","DescriptionFilm","selectedFilm","setSelectedFilmById","posterUrl","slogan","filmLength","year","ratingAgeLimits","description","FavouriteFilms","MemoShowOnSearchFilms","App","exact","path","component","render","SortFilmsOnGenre","process","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f7199a36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_block\":\"Filter_filter_block__3kjbO\",\"listGroup\":\"Filter_listGroup__gtJto\",\"accordionButton\":\"Filter_accordionButton__1yZ1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2se3H\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SHOW_FILMS = \"SHOW_FILMS\";\r\nexport const SHOW_LOADING = 'SHOW_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';\r\nexport const HANDLER_INPUT = 'HANDLER_INPUT'\r\nexport const GET_GENRES = 'GET_GENRES'\r\nexport const SET_SELECTED_FILTER = 'SET_SELECTED_FILTER'\r\nexport const SET_FAVOURITE_FILMS = 'SET_FAVOURITE_FILMS'\r\nexport const DELETE_FAVOURITE_FILMS = 'DELETE_FAVOURITE_FILMS'\r\nexport const SET_SELECTED_FILM_ID = 'SET_SELECTED_FILM_ID'\r\nexport const DELETE_SELECTED_FILM_ID = 'DELETE_SELECTED_FILM_ID'\r\nexport const GET_VIDEO = 'GET_VIDEO'\r\nexport const API_KEY = \"303097b4-2b0a-46a5-8aae-4a1137273ff1\";\r\n\r\n","import {SHOW_LOADING, HIDE_LOADING, SHOW_FILMS, SET_SELECTED_FILM_ID, DELETE_SELECTED_FILM_ID} from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    pagesCount: null,\r\n    films: [],\r\n    isLoading: false,\r\n    currentPage: 1,\r\n    selectedMovie: null\r\n}\r\n\r\nexport const filmsReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SHOW_FILMS:\r\n            return {\r\n                ...state,\r\n                films: action.payload.films,\r\n                pagesCount: action.payload.pagesCount,\r\n                currentPage: action.payload.currentPage,\r\n            }\r\n        case SHOW_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading : true\r\n            }\r\n        case HIDE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading : false\r\n            }\r\n        case SET_SELECTED_FILM_ID:\r\n            return {\r\n                ...state,\r\n                selectedMovie: action.payload\r\n            }\r\n        case DELETE_SELECTED_FILM_ID:\r\n            return {\r\n                ...state,\r\n                selectedMovie: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { HANDLER_INPUT } from \"./typeAction\";\r\n\r\nlet initialState = {\r\n    searchTest: \"\",\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HANDLER_INPUT:\r\n            return {\r\n                ...state,\r\n                searchTest: action.text,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {DELETE_FAVOURITE_FILMS, SET_FAVOURITE_FILMS} from \"./typeAction\";\r\n\r\n\r\nlet initialState = {\r\n    favouriteFilms: [],\r\n}\r\n\r\nexport const favouriteReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms, action.payload],\r\n            }\r\n        case DELETE_FAVOURITE_FILMS:\r\n            return {\r\n                ...state,\r\n                favouriteFilms: [...state.favouriteFilms.filter(film=>film.filmId !== action.payload.filmId)],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_GENRES} from \"./typeAction\";\r\n\r\n\r\nconst initialState = {\r\n    genres: [],\r\n    countries: [],\r\n    rating: null,\r\n    fromYear: null,\r\n    toYear: null,\r\n}\r\n\r\nexport const filterReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_GENRES:\r\n            return {\r\n                ...state,\r\n                genres: action.genres,\r\n                countries: action.countries\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { filmsReduser } from \"./filmsReduser\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {favouriteReduser} from \"./favouritesReduser\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {filterReduser} from \"./filterReduser\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['favouriteFilms']\r\n};\r\n\r\nlet reducers = combineReducers({\r\n    films : filmsReduser,\r\n    header: headerReducer,\r\n    filter: filterReduser,\r\n    favouriteFilms: persistReducer(persistConfig, favouriteReduser),\r\n})\r\n\r\nlet store = createStore(reducers,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import * as axios from \"axios\";\r\nimport { API_KEY } from \"../Redux/typeAction\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://kinopoiskapiunofficial.tech/api/v2.1/films/\",\r\n    headers: {\r\n        \"Content-Type\": \"aplication/json\",\r\n        \"X-API-KEY\": API_KEY,\r\n    },\r\n});\r\n\r\nexport const filmsAPI = {\r\n\r\n    getFilmsTOP100(currentPage=1) {\r\n        return instance.get(`top?type=TOP_100_POPULAR_FILMS&page=${currentPage}`);\r\n    },\r\n    getAwaitFilms(currentPage) {\r\n        return instance.get(`top?type=TOP_AWAIT_FILMS&page=${currentPage}`);\r\n\r\n    },\r\n    getFilmsFromSearch(inputText, currentPage) {\r\n        return instance.get(\r\n            `search-by-keyword?keyword=${inputText}&page=${currentPage}`\r\n        );\r\n    },\r\n    getListGenreAndCountry (){\r\n        return instance.get(`filters`);\r\n    },\r\n    getFilteredParams (filteredParams, currentPage){\r\n        return instance.get(`search-by-filters?${filteredParams}&page=${currentPage}`)\r\n    },\r\n    getFilmsById(id){\r\n        return instance.get(`${id}`)\r\n    }\r\n};\r\n","import {filmsAPI} from \"../API/API\";\r\nimport {\r\n    SHOW_FILMS,\r\n    GET_GENRES,\r\n    HANDLER_INPUT,\r\n    HIDE_LOADING,\r\n    SHOW_LOADING, SET_FAVOURITE_FILMS, DELETE_FAVOURITE_FILMS, SET_SELECTED_FILM_ID, GET_VIDEO, DELETE_SELECTED_FILM_ID,\r\n} from \"./typeAction\";\r\n\r\n\r\nexport const showLoading = () => ({type: SHOW_LOADING});\r\nexport const hideLoading = () => ({type: HIDE_LOADING});\r\n\r\nexport const handlerInput = (text) => ({type: HANDLER_INPUT, text});\r\n\r\nexport const setGenresAndCountries = (genres, countries) => ({\r\n    type: GET_GENRES,\r\n    genres: genres,\r\n    countries: countries\r\n});\r\n\r\nexport const setFilms = (films, pagesCount, currentPage) => ({\r\n    type: SHOW_FILMS,\r\n    payload: {\r\n        films,\r\n        pagesCount,\r\n        currentPage\r\n    }\r\n})\r\n\r\nexport const getTop100Films = (currentPage) => (dispatch) => {\r\n    filmsAPI\r\n        .getFilmsTOP100(currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getAwaitFilms = (currentPage) => (dispatch) => {\r\n    filmsAPI\r\n        .getAwaitFilms(currentPage)\r\n        .then((response) => {\r\n            console.log(response.data)\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getFilmsFromSearch = (query, currentPage) => (dispatch) => {\r\n    filmsAPI\r\n        .getFilmsFromSearch(query, currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n        })\r\n        .catch(() => {\r\n            console.log(\"Error\");\r\n        });\r\n};\r\n\r\nexport const getGenreAndCountries  = () => (dispatch) => {\r\n    filmsAPI.getListGenreAndCountry().then((response) => {\r\n        dispatch(setGenresAndCountries(response.data.genres, response.data.countries));\r\n    });\r\n};\r\n\r\nexport const setFilteredParams = (filteredParams, currentPage = 1) => (dispatch) => {\r\n    filmsAPI\r\n        .getFilteredParams(filteredParams, currentPage)\r\n        .then((response) => {\r\n            dispatch(setFilms(response.data.films, response.data.pagesCount, currentPage))\r\n        });\r\n};\r\n\r\nexport const setFavouritesFilms = (payload) => ({type: SET_FAVOURITE_FILMS, payload})\r\n\r\nexport const deleteFavouritesFilms = (payload) => ({type: DELETE_FAVOURITE_FILMS, payload})\r\n\r\nexport const setSelectedFilmById = (id) => (dispatch)=> {\r\n    filmsAPI.getFilmsById(id).then((response) => {\r\n        dispatch(setSelectedFilmByIdAC(response.data.data));\r\n    });\r\n}\r\n\r\nexport const setSelectedFilmByIdAC = (payload) => ({type: SET_SELECTED_FILM_ID, payload})\r\n\r\nexport const deleteSelectedFilmById = () => ({type: DELETE_SELECTED_FILM_ID})\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getGenreAndCountries} from \"../../Redux/actions\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './Filter.module.css'\r\nimport Slider from 'react-input-slider';\r\n\r\nconst Filter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const genres = useSelector((state) => state.filter.genres);\r\n    const countries = useSelector((state) => state.filter.countries);\r\n    const [value, setValue] = useState('');\r\n    const [listCountries, setListCountries] = useState([]);\r\n    const [filteredParams, setFilteredParams] = useState([]);\r\n    const [selectedGenre, setSelectedGenre] = useState('')\r\n    const [selectedCountry, setSelectedCountry] = useState('')\r\n    const [selectedYearFrom, setSelectedYearFrom] = useState({x:1880})\r\n    const [selectedYearTo, setSelectedYearTo] = useState({x:2021})\r\n    const [selectedRatingFrom, setSelectedRatingFrom] = useState({x:0})\r\n    const [selectedRatingTo, setSelectedRatingTo] = useState({x:10})\r\n    const [order, setOrder] = useState('order=YEAR')\r\n\r\n    useEffect(() => {\r\n        setListCountries(countries);\r\n    }, [countries])\r\n\r\n    useEffect(() => {\r\n        dispatch(getGenreAndCountries());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const filterArray = countries.filter((c) => {\r\n            if (c.country.toLocaleLowerCase().indexOf(value.toLocaleLowerCase()) === 0) return c\r\n        })\r\n        setListCountries(filterArray);\r\n    }, [value])\r\n\r\n    useEffect(()=>{\r\n        setFilteredParams(prevState => [...prevState, order, selectedGenre, selectedCountry, `&yearFrom=${selectedYearFrom.x}`, `&yearTo=${selectedYearTo.x}`,\r\n            `&ratingFrom=${selectedRatingFrom.x}`, `&ratingTo=${selectedRatingTo.x}` ]);\r\n        return ()=>{\r\n            setFilteredParams([]);\r\n        }\r\n    }, [selectedGenre, selectedCountry, selectedYearFrom.x, selectedYearTo.x, selectedRatingFrom.x, selectedRatingTo.x, order])\r\n\r\n    return (\r\n        <div className=\"container-fluid pt-5\">\r\n            <div className=\"accordion dark\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                            Жанры\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <ul className={`list-group ${style.filter_block}`}>\r\n                            {genres.map((g) => {\r\n                                return (\r\n                                    <li\r\n                                        className={`list-group-item ${selectedGenre===`&genre=${g.id}` && 'active'}`}\r\n                                        style={{cursor: 'pointer'}}\r\n                                        key={g.id}\r\n                                        onClick={(e)=>setSelectedGenre(`&genre=${g.id}`)}\r\n                                    >\r\n                                        {g.genre}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Страны\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <ul className={`list-group ${style.filter_block}`}>\r\n                            <input type=\"text\" value={value} placeholder={'Название страны'}\r\n                                   onChange={(e) => setValue(e.target.value)}/>\r\n                            {!listCountries.length && <li className=\"list-group-item\">{\"Ничего не найдено\"}</li>}\r\n                            {listCountries.map((c) => {\r\n                                return (\r\n                                    <li\r\n                                        className={`list-group-item ${selectedCountry===`&country=${c.id}` && 'active'}`}\r\n                                        key={c.id}\r\n                                        style={{cursor: 'pointer'}}\r\n                                        onClick={(e)=>setSelectedCountry(`&country=${c.id}`)}\r\n                                    >\r\n                                        {c.country}\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseFour\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                            Год\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFour\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <div>От {selectedYearFrom.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedYearFrom.x} xmin={1880} xmax={2021} onChange={({x})=>setSelectedYearFrom(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                            <div>До {selectedYearTo.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedYearTo.x} xmin={selectedYearFrom.x} xmax={2021} onChange={({x})=>setSelectedYearTo(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"headingFive\">\r\n                            Рейтинг\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFive\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <div>От {selectedRatingFrom.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedRatingFrom.x} xmin={0} xmax={10} onChange={({x})=>setSelectedRatingFrom(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                            <div>До {selectedRatingTo.x}</div>\r\n                            <div>\r\n                                <Slider axis=\"x\" x={selectedRatingTo.x} xmin={selectedRatingFrom.x} xmax={10} onChange={({x})=>setSelectedRatingTo(prev=>({...prev, x}))}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseSix\" aria-expanded=\"false\" aria-controls=\"headingSix\">\r\n                            Сортировка\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseSix\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingSix\"\r\n                         data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <ul className={'list-group'}>\r\n                                <li\r\n                                    className={`list-group-item ${order==='order=RATING' && 'active'}`}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    onClick={(e)=>setOrder(`order=RATING`)}\r\n                                >Отсортировать по рейтингу</li>\r\n                                <li\r\n                                    className={`list-group-item ${order==='order=YEAR' && 'active'}`}\r\n                                    style={{cursor: 'pointer'}}\r\n                                    onClick={(e)=>setOrder(`order=YEAR`)}\r\n                                >Отсортировать по году</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <NavLink to={`/films/${filteredParams.join('')}`} className={'btn btn-outline-primary p-2 justify-content-center d-flex text-white border-white'}>\r\n                    Отфильтровать\r\n                </NavLink>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport './films.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteFavouritesFilms, setFavouritesFilms, setSelectedFilm} from \"../../Redux/actions\";\r\n\r\nconst Films = ({films}) => {\r\n\r\n    const selectRating = (raiting) => {\r\n        if (raiting >= 9) return \"green\";\r\n        else if (raiting >= 7) return \"yellow\"\r\n        else if (raiting >= 5) return \"orange\";\r\n        else return \"red\";\r\n    }\r\n    const dispatch = useDispatch();\r\n    const favouriteFilms = useSelector((state) => state.favouriteFilms.favouriteFilms)\r\n\r\n    return (\r\n        <div className=\"row row-cols-1 row-cols-lg-5 g-2 g-lg-3\">\r\n            {films.map((f) => (\r\n                <div className=\"col cardFilms\" key={f.filmId}>\r\n                    <div className=\"card\">\r\n                        <NavLink to={`/cinemaInfo/${f.filmId}/`}>\r\n                            <img\r\n                                src={f.posterUrlPreview}\r\n                                className=\"card-img-top\"\r\n                                alt=\"...\"\r\n                            />\r\n                        </NavLink>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">{f.nameRu}</p>\r\n                            {favouriteFilms.some((item)=>item.filmId === f.filmId) ?\r\n                                <button onClick={() => dispatch(deleteFavouritesFilms(f))}\r\n                                        className={'btn btn-danger'}>\r\n                                    Удалить из избранного\r\n                                </button> :\r\n                                <button onClick={() => dispatch(setFavouritesFilms(f))} className={'btn btn-success'}>\r\n                                    Добавить в избранное\r\n                                </button>}\r\n                            <div className=\"rating-area\">\r\n                                <label htmlFor=\"star\" >{f.rating !== 'null' ? `${f.rating}`: '0'}</label>\r\n                            </div>\r\n                            <NavLink to={`/cinemaInfo/${f.filmId}/`}>\r\n                                Смотреть онлайн\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default Films\r\n","import React from \"react\";\r\nimport styles from './preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={styles.preloader} >\r\n            Загрузка\r\n        </div>\r\n    );\r\n};\r\n","\r\nimport React, { useState } from \"react\";\r\nimport \"./../../App.css\"\r\n\r\nexport const Pagination = ({onPageChanged, pagesCount, currentPage, portionSize}) => {\r\n\r\n    console.log(\"Render Pagination\");\r\n    let pages = [];\r\n    if(pagesCount > 20) pagesCount = 20\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    let leftBorderPagination = (portionNumber - 1) * portionSize +1;\r\n    let rightBorderPagination = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className=\"row pt-5 pb-5\">\r\n            <div className=\"col justify-content-center d-flex\">\r\n                <nav aria-label=\"...\">\r\n                    <ul className=\"pagination pagination-lg\">\r\n                        {portionNumber > 1 && <button className=\"btn btn-danger\" onClick={()=>{setPortionNumber(portionNumber-1)}}>&laquo;</button>}\r\n                        {pages\r\n                            .filter(p=> p>=leftBorderPagination && p <=rightBorderPagination)\r\n                            .map((p) => {\r\n                                return <li className={currentPage === p ?'page-item active':'page-item'} key={p}>\r\n                                    <span className={'page-link'} onClick={() => onPageChanged(p)}> {p}</span>\r\n                                </li>\r\n                            })}\r\n                        {portionCount > portionNumber && <button className=\"btn btn-danger\" onClick={()=>{setPortionNumber(portionNumber+1)}}>&raquo;</button>}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport { Preloader } from \"../Loader/Preloader\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setFilteredParams} from \"../../Redux/actions\";\r\n\r\nconst SortFilmsGenres = () => {\r\n\r\n    const pagesCount = useSelector(state=>state.films.pagesCount);\r\n    const currentPage = useSelector(state=>state.films.currentPage);\r\n    const isLoading = useSelector(state=>state.films.isLoading);\r\n    const films = useSelector(state=>state.films.films);\r\n    const MemoPagination = memo(Pagination);\r\n    const {filteredParams} = useParams();\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        console.log(\"Screening of films by genre \")\r\n        dispatch(setFilteredParams(filteredParams))\r\n    },[filteredParams])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        dispatch(setFilteredParams(filteredParams, pageNumber));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container pt-5\">\r\n            {isLoading ? <Preloader /> : null}\r\n            <Films films={films} />\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default SortFilmsGenres;\r\n","import Films from \"../Films/Films\";\r\nimport {getFilmsFromSearch} from \"../../Redux/actions\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {memo, useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const ShowOnSearchFilms = (props) => {\r\n\r\n    const {name} = useParams();\r\n    const films = useSelector(state=> state.films.films)\r\n    const pagesCount = useSelector(state=> state.films.pagesCount)\r\n    const currentPage = useSelector(state=> state.films.currentPage)\r\n    const searchTest = useSelector(state=> state.header.searchTest);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getFilmsFromSearch(name, 1));\r\n    },[dispatch,name])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        dispatch(getFilmsFromSearch(searchTest, pageNumber));\r\n    };\r\n    const MemoPagination = memo(Pagination);\r\n    console.log('Render Show Films By Search');\r\n    return (\r\n        <div className=\"container pt-5\">\r\n            <Films films={films} />\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport const Loader = () => {\r\n    return (\r\n        <>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory} from \"react-router\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {handlerInput} from \"../../Redux/actions\";\r\nimport {Loader} from \"../Loader/Loader\";\r\n\r\nexport const Header = () => {\r\n    let history = useHistory();\r\n    const [handler, setHandler] = useState('');\r\n    const isLoading = useSelector(state => state.films.isLoading)\r\n    const dispatch = useDispatch();\r\n\r\n    const submitForm = (e, value) => {\r\n        e.preventDefault();\r\n        dispatch(handlerInput(value));\r\n        history.push(`/film/${value}`)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container-fluid d-flex justify-content-center\">\r\n                    <ul className=\"nav nav-pills nav-fill\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/top100\" className=\"btn btn-primary\">Топ 100 фильмов</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <form\r\n                        className=\"d-flex p-3\"\r\n                        onSubmit={(e) => {\r\n                            submitForm(e, handler);\r\n                        }}\r\n                    >\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Введите название фильма!\"\r\n                            value={handler}\r\n                            onChange={(e) => {\r\n                                setHandler(e.target.value);\r\n                            }}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-outline-success\"\r\n                            type=\"button\"\r\n                            onClick={(e) => submitForm(e, handler)}\r\n                        >\r\n                            {isLoading ? <Loader/> : \"Поиск\"}\r\n                        </button>\r\n                    </form>\r\n                    <NavLink to=\"/favourite\" className=\"btn btn-primary\">Мои любимые фильмы</NavLink>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAwaitFilms} from \"../../Redux/actions\";\r\n\r\nexport const FilmsAwaitFilms = () => {\r\n\r\n    const MemoPagination = memo(Pagination);\r\n    const pagesCount = useSelector(state => state.films.pagesCount);\r\n    const currentPage = useSelector(state => state.films.currentPage);\r\n    const films = useSelector(state => state.films.films);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAwaitFilms(currentPage));\r\n    }, [dispatch, currentPage])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        getAwaitFilms(pageNumber);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <Films films={films}/>\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {getTop100Films} from \"../../Redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const FilmsTop100 = () => {\r\n    const currentPage = useSelector(state => state.films.currentPage)\r\n    const pagesCount = useSelector(state => state.films.pagesCount)\r\n    const films = useSelector(state => state.films.films)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(getTop100Films(currentPage))\r\n    },[currentPage])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        dispatch(getTop100Films(pageNumber))\r\n    };\r\n    const MemoPagination = memo(Pagination);\r\n    return (\r\n        <div className=\"container pt-5\">\r\n\r\n            <Films films={films} />\r\n            <MemoPagination\r\n                pagesCount={pagesCount}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={5}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport './descriptionFilm.css'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteSelectedFilmById, setSelectedFilmById} from \"../../Redux/actions\";\r\n\r\nconst DescriptionFilm = () => {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const selectedFilm = useSelector(state => state.films.selectedMovie);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setSelectedFilmById(id))\r\n        return ()=>{\r\n            dispatch(deleteSelectedFilmById())\r\n        }\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"movie_top\">\r\n            {\r\n                selectedFilm ? <div>\r\n                        <div className=\"col-md-9 movie_box m-4\">\r\n                            <div className=\"grid images_3_of_2\">\r\n                                <div className=\"movie_image\">\r\n                                    <img src={selectedFilm.posterUrl} className=\"img-responsive\" alt=\"\"/>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"desc1 span_3_of_2\">\r\n                                <p className=\"movie_option\"><strong>Название: </strong>{selectedFilm.nameRu}</p>\r\n                                <p className=\"movie_option\"><strong>Слоган\r\n                                    ограничения: </strong>{ selectedFilm.slogan || 'Без слогана'}</p>\r\n                                <p className=\"movie_option\"><strong>Продолжительность: </strong>{ selectedFilm.filmLength}\r\n                                </p>\r\n                                <p className=\"movie_option\"><strong>Страна: </strong>{ selectedFilm.countries.map(c =>\r\n                                    <span>{c.country} </span>)}</p>\r\n                                <p className=\"movie_option\"><strong>Год: </strong>{selectedFilm.year}</p>\r\n                                <p className=\"movie_option\"><strong>Жанр: </strong>{selectedFilm.genres.map(g =>\r\n                                    <span>{g.genre} </span>)}</p>\r\n                                <p className=\"movie_option\"><strong>Возратсные\r\n                                    ограничения: </strong>{selectedFilm.ratingAgeLimits}+</p>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"m_4 description\">{selectedFilm.description}</p>\r\n                    </div>\r\n\r\n                    : ''}\r\n        </div>\r\n    )\r\n}\r\nexport default DescriptionFilm\r\n","import React, {memo, useEffect} from \"react\";\r\nimport Films from \"../Films/Films\";\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const FavouriteFilms = () => {\r\n    const favouriteFilms = useSelector(state => state.favouriteFilms.favouriteFilms)\r\n    const dispatch = useDispatch();\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        //dispatch(getTop100Films(pageNumber))\r\n    };\r\n    const MemoPagination = memo(Pagination);\r\n    return (\r\n        <div className=\"container pt-5\">\r\n\r\n            <Films films={favouriteFilms} />\r\n            {/*<MemoPagination*/}\r\n            {/*    pagesCount={pagesCount}*/}\r\n            {/*    currentPage={currentPage}*/}\r\n            {/*    onPageChanged={onPageChanged}*/}\r\n            {/*    portionSize={5}*/}\r\n            {/*/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {memo, Suspense, useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Filter from \"./Components/Filter/Filter\";\nimport SortFilmsOnGenre from \"./Components/ShowFilms/SortFilmsOnGenre\";\nimport {ShowOnSearchFilms} from \"./Components/ShowFilms/ShowOnSearchFilms\";\nimport {Header} from \"./Components/Header/Header\";\nimport {FilmsAwaitFilms} from \"./Components/ShowFilms/FilmsAwaitFilms\";\nimport {FilmsTop100} from \"./Components/ShowFilms/FilmsTop100\";\nimport DescriptionFilm from \"./Components/DescriptionFilm/DescriptionFilm\";\nimport {FavouriteFilms} from \"./Components/ShowFilms/FavoutiteFilms\";\n//const DescriptionFilm = React.lazy(() => import('./Components/DescriptionFilm/DescriptionFilm'))\n\nconst MemoShowOnSearchFilms = memo(ShowOnSearchFilms);\n\nconst App = () => {\n\n  return (\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <Filter/>\n            </div>\n            <div className=\"col-9\">\n              <Switch>\n                <Route exact path={\"/\"} component={FilmsAwaitFilms}/>\n                <Route path={\"/favourite\"} component={FavouriteFilms}/>\n                <Route path={\"/cinemaInfo/:id\"} render={() => <DescriptionFilm/>}/>\n                <Route path=\"/film/:name\" component={MemoShowOnSearchFilms}/>\n                <Route path=\"/films/:filteredParams\" component={SortFilmsOnGenre}/>\n                <Route path=\"/top100\" render={() => <FilmsTop100/>}/>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"../src/Redux/storeRedux\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {persistor} from \"./Redux/storeRedux\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nconsole.log(process.env.PUBLIC_URL)\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL} >\n        <Provider store={store}>\n            <PersistGate  persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </HashRouter>,\n    document.getElementById(\"root\")\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}